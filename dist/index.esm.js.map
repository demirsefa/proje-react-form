{"version":3,"file":"index.esm.js","sources":["../src/models/form-refresh-type.ts","../src/models/action-type.ts","../src/utils/throw-not-registered.ts","../src/models/form-state.ts","../src/models/store-global-options.ts","../src/utils/debounce.ts","../src/form-base/reducer.ts","../src/form-base/store.ts","../src/validator/regex-list.ts","../src/validator/validate-utis.ts","../src/validator/validator.ts","../src/form-base/form-base.ts","../src/form-base/hooks/use-error-for-input.ts","../src/form-base/hooks/use-error-for-global.ts","../src/form-base/hooks/use-loading.tsx","../src/form-base/hooks/use-store-state-watch.ts","../src/form-base/hooks/use-watch.ts","../src/form-base/useInput.tsx","../src/form-context/form-context.tsx","../src/form-context/use-context-form-base.tsx","../src/utils/throw-context-error.ts","../src/dom/form.tsx","../src/fragment/fragment-context.tsx","../src/fragment/use-fragment-id.tsx","../src/dom/input.tsx","../src/dom/textarea.tsx","../src/dom/error-for-global.tsx","../src/dom/error-for-input.tsx","../src/validator/get-error-default-text.ts"],"sourcesContent":["export enum FormRefreshType {\n\tblur,\n\tinstant,\n}\n","export enum ActionType {\n\tINIT = \"INIT\",\n\tNEW_VALUE = \"NEW_VALUE\",\n\tBLURRED = \"BLURRED\",\n\tNEW_FORCED_VALUE = \"NEW_FORCED_VALUE\",\n\tSET_INPUT_ERROR = \"SET_INPUT_ERROR\",\n\tCLEAN_INPUT_ERROR = \"CLEAN_INPUT_ERROR\",\n\tSET_LOADING_ON = \"SET_LOADING_ON\",\n\tSET_LOADING_OFF = \"SET_LOADING_OFF\",\n\tSET_GLOBAL_ERROR = \"SET_GLOBAL_ERROR\",\n\tCLEAR_GLOBAL_ERROR = \"CLEAR_GLOBAL_ERROR\",\n\tSET_SUCCESS = \"SET_SUCCESS\",\n\tASYNC_VALIDATION = \"ASYNC_VALIDATION\",\n}\nexport interface EventType {\n\tindex: number;\n\tactionType: ActionType;\n}\n\nexport type ActionProps = { type: ActionType; payload?: any };\n\nexport interface NewValueProps extends InputStateProps {\n\tvalue: number;\n}\n\nexport interface InputStateProps {\n\tname: string;\n}\n","export function throwNotRegistered(name: string) {\n\treturn new Error(`\"${name}\" is not registered`);\n}\n","import { FormRefreshType } from \"./form-refresh-type\";\n\nexport interface FormState {\n\terror: { payload: any } | null;\n\trefreshType: FormRefreshType;\n\tdebounceNumber?: number;\n\tloading: boolean;\n\tconfirmed: boolean;\n\treadyToSubmit: boolean; //todo: no-need maybe?\n\tformStatus: \"CLEAN\" | \"DIRTY\" | \"SUCCESS\" | \"ERROR\" | \"GLOBAL-ERROR\";\n\tformAttemptError: number;\n\tformAttemptGlobalError: number;\n\t//analytics\n}\n\nexport const defaultFormState: FormState = {\n\terror: null,\n\trefreshType: FormRefreshType.instant,\n\tdebounceNumber: undefined,\n\tloading: false,\n\tconfirmed: false,\n\tformStatus: \"CLEAN\",\n\tformAttemptError: 0,\n\tformAttemptGlobalError: 0,\n\treadyToSubmit: false,\n};\n","import { FormRefreshType } from \"./form-refresh-type\";\n\nexport default interface StoreGlobalOptions {\n\trefreshType: FormRefreshType;\n\tdebounceNumber?: number;\n}\nexport const defaultStoreGlobalOptions: StoreGlobalOptions = {\n\trefreshType: FormRefreshType.instant,\n\tdebounceNumber: undefined,\n};\n","export class Debounce {\n\ttime: number;\n\t__select_time: 0;\n\n\tconstructor(time = 800) {\n\t\tthis.time = time;\n\t\tthis.__select_time = 0;\n\t}\n\n\tpublic cb(cb: any) {\n\t\tthis.reset();\n\t\t// @ts-ignore\n\t\tthis.__select_time = setTimeout(() => {\n\t\t\tcb && cb();\n\t\t}, this.time);\n\t}\n\n\tprivate reset() {\n\t\tclearTimeout(this.__select_time);\n\t}\n}\n","import { ActionProps, ActionType, InputStateProps, NewValueProps } from \"../models/action-type\";\nimport { throwNotRegistered } from \"../utils\";\nimport { FormRefreshType, StoreState } from \"../models\";\n\nexport function reducer(state: StoreState, action: ActionProps): StoreState {\n\tswitch (action.type) {\n\t\tcase ActionType.SET_LOADING_ON:\n\t\t\tstate.formState.loading = true;\n\t\t\tbreak;\n\t\tcase ActionType.SET_LOADING_OFF:\n\t\t\tstate.formState.loading = false;\n\t\t\tbreak;\n\t\tcase ActionType.CLEAR_GLOBAL_ERROR:\n\t\t\tstate.formState.formStatus = \"CLEAN\";\n\t\t\tstate.formState.error = null;\n\t\t\tbreak;\n\t\tcase ActionType.SET_GLOBAL_ERROR:\n\t\t\tstate.formState.formStatus = \"GLOBAL-ERROR\";\n\t\t\tstate.formState.formAttemptGlobalError++;\n\t\t\tstate.formState.error = action.payload;\n\t\t\tbreak;\n\t\tcase ActionType.CLEAN_INPUT_ERROR:\n\t\t\tconst currentInputState = state.inputStates[action.payload.name];\n\t\t\tcurrentInputState.error = null;\n\t\t\tif (state.formState.formStatus !== \"GLOBAL-ERROR\") {\n\t\t\t\tif (Object.values(state.inputStates).reduce((sum, value) => sum && value)) {\n\t\t\t\t\tstate.formState.formStatus = \"CLEAN\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ActionType.SET_INPUT_ERROR:\n\t\t\tif (action.payload.name) {\n\t\t\t\tconst currentInputState = state.inputStates[action.payload.name];\n\t\t\t\tcurrentInputState.error = action.payload;\n\t\t\t\tcurrentInputState.validateLoading = false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ActionType.NEW_FORCED_VALUE: {\n\t\t\tconst payload = action.payload as NewValueProps;\n\t\t\tconst value = payload.value;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tcurrentInputState.value = value;\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.NEW_VALUE: {\n\t\t\tstate.formState.formStatus = \"DIRTY\";\n\t\t\tconst payload = action.payload as NewValueProps;\n\t\t\tconst value = payload.value;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tconst currentValue = currentInputState.value;\n\n\t\t\tif (currentValue !== value) {\n\t\t\t\tcurrentInputState._refreshValue = value;\n\t\t\t\tif (state.formState.refreshType === FormRefreshType.instant) {\n\t\t\t\t\tif (!state.formState.debounceNumber || state.formState.debounceNumber === 0)\n\t\t\t\t\t\tcurrentInputState.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tcase ActionType.BLURRED: {\n\t\t\tconst payload = action.payload as InputStateProps;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tcurrentInputState.value = currentInputState._refreshValue;\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.SET_SUCCESS: {\n\t\t\tstate.formState.formStatus = \"SUCCESS\";\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.ASYNC_VALIDATION: {\n\t\t\tif (action.payload.name) {\n\t\t\t\tconst currentInputState = state.inputStates[action.payload.name];\n\t\t\t\tcurrentInputState.validateLoading = action.payload.value;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected Action Type\");\n\t}\n\n\treturn state;\n}\n","import { ActionProps, ActionType, EventType } from \"../models/action-type\";\nimport { CreateInputOptions } from \"../models/create-input-options\";\nimport { Debounce, throwNotRegistered } from \"../utils\";\nimport { InputState, StoreState } from \"../models\";\n\ntype SubscribeType = (state: StoreState) => void;\n\nexport class Store {\n\tprivate listeners: SubscribeType[] = [];\n\tprivate debounce?: Debounce;\n\tlastEvent: EventType = { actionType: ActionType.INIT, index: 0 };\n\n\tconstructor(private state: StoreState, private reducer: (state: StoreState, action: ActionProps) => StoreState) {\n\t\tthis.debounce = new Debounce(state.formState.debounceNumber);\n\t}\n\n\tpublic subscribe(fn: SubscribeType) {\n\t\tthis.listeners.push(fn);\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.indexOf(fn), 1);\n\t\t};\n\t}\n\n\tpublic dispatch(action: ActionProps) {\n\t\tthis.lastEvent = { actionType: action.type, index: this.lastEvent.index + 1 };\n\t\tthis.state = this.reducer(this.state, action);\n\t\tif (\n\t\t\taction.type === ActionType.NEW_VALUE &&\n\t\t\tthis.state.formState.debounceNumber &&\n\t\t\tthis.state.formState.debounceNumber > 0\n\t\t) {\n\t\t\tthis.debounce?.cb(() => {\n\t\t\t\tthis.dispatch({ type: ActionType.NEW_FORCED_VALUE, payload: action.payload });\n\t\t\t});\n\t\t} else {\n\t\t\tthis.broadcast();\n\t\t}\n\t}\n\n\t//todo: optimize\n\tpublic getData() {\n\t\tlet data: Record<string, any> = {};\n\t\tconst keys = Object.keys(this.state.inputStates);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst inputState = this.state.inputStates[keys[i]];\n\t\t\tdata[inputState.name] = inputState.value;\n\t\t}\n\t\treturn data;\n\t}\n\n\t//todo: optimize\n\tpublic getValidationData() {\n\t\tlet data: Record<string, any> = {};\n\t\tconst keys = Object.keys(this.state.inputStates);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst inputState = this.state.inputStates[keys[i]];\n\t\t\tif (inputState.validateRequired) {\n\t\t\t\tdata[inputState.name] = inputState.value;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\n\tpublic checkInputExist(name: string): boolean {\n\t\tconst currentInputState = this.state.inputStates[name];\n\t\treturn !!currentInputState;\n\t}\n\n\tpublic getInputState(name: string): InputState | undefined {\n\t\treturn this.state.inputStates[name];\n\t}\n\n\tpublic createInput(name: string, options: CreateInputOptions) {\n\t\treturn (this.state.inputStates[name] = {\n\t\t\tname: name,\n\t\t\tvalue: options.defaultValue,\n\t\t\tfragmentId: options.fragmentId,\n\t\t\tvalidateLoading: false,\n\t\t\t_refreshValue: options.defaultValue,\n\t\t\tblurNumber: 0,\n\t\t\tvalidateRequired: false,\n\t\t\tvalidation: options.validation,\n\t\t\terror: null,\n\t\t});\n\t}\n\n\tpublic deleteInput(name: string) {\n\t\tconst currentInputState = this.state.inputStates[name];\n\t\tif (!currentInputState) {\n\t\t\tthrow throwNotRegistered(name);\n\t\t}\n\t\tdelete this.state.inputStates[name];\n\t}\n\n\tgetFormState() {\n\t\treturn this.state.formState;\n\t}\n\n\tpublic broadcast() {\n\t\tthis.listeners.forEach((l) => l(this.state));\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\tgetDataByFragment(fragmentNumber: number) {\n\t\tlet data: Record<string, any> = {};\n\t\tconst keys = Object.keys(this.state.inputStates);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst inputState = this.state.inputStates[keys[i]];\n\t\t\tif (inputState.fragmentId === fragmentNumber) {\n\t\t\t\tdata[inputState.name] = inputState.value;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n}\n","//cp: https://stackoverflow.com/a/29767609\nexport const phoneRegex = /^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im;\n//cp: https://stackoverflow.com/a/46181\nexport const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//cp: https://stackoverflow.com/a/3809435\nexport const urlHttpRegex =\n    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/;\n","import { emailRegex, phoneRegex, urlHttpRegex } from \"./regex-list\";\n\nexport function required(value: any): boolean {\n\treturn !!value;\n}\n\nexport function min(value: any, payload: number): boolean {\n\tlet _value = Number(value);\n\treturn !isNaN(_value) && _value > payload;\n}\n\nexport function minLength(value: any, payload: number): boolean {\n\treturn typeof value === \"string\" && value.length > payload;\n}\n\nexport function max(value: any, payload: number) {\n\tlet _value = Number(value);\n\treturn !isNaN(_value) && _value < payload;\n}\n\nexport function maxLength(value: any, payload: number): boolean {\n\treturn typeof value === \"string\" && value.length < payload;\n}\n\n//inspired: https://stackoverflow.com/a/46181\nexport function email(value: any): boolean {\n\treturn typeof value === \"string\" && !!value.toLowerCase().match(emailRegex);\n}\n\n//inspired: https://stackoverflow.com/a/29767609\nexport function phone(value: any): boolean {\n\treturn typeof value === \"string\" && !!value.match(phoneRegex);\n}\n\nexport function repeatPassword(value: any, payload?: string): boolean {\n\treturn value === payload;\n}\n\n//inspired: https://stackoverflow.com/a/3809435\nexport function url(value: any): boolean {\n\treturn typeof value === \"string\" && !!value.match(urlHttpRegex);\n}\n\nexport function customRegex(value: any, regex: RegExp): boolean {\n\treturn typeof value === \"string\" && regex.test(value);\n}\n","import {\n\tcustomRegex,\n\temail,\n\tmax,\n\tmaxLength,\n\tmin,\n\tminLength,\n\tphone,\n\trepeatPassword,\n\trequired,\n\turl,\n} from \"./validate-utis\";\nimport { IvalidationStore } from \"../models\";\n\ntype validateFunc = ((value: any, payload: any) => boolean) | ((value: number) => boolean);\ntype validateAsyncFunc = ((value: any, payload: any) => boolean) | ((value: number) => Promise<boolean>);\n\nexport enum ValidatorType {\n\trequired = \"required\",\n\tmin = \"min\",\n\tminLength = \"minLength\",\n\tmax = \"max\",\n\tmaxLength = \"maxLength\",\n\temail = \"email\",\n\tphone = \"phone\",\n\trepeatPassword = \"repeatPassword\",\n\turl = \"url\",\n\tregex = \"regex\",\n}\n\ntype ValidatorTypeInterface = Record<ValidatorType, ((payload: any) => Validator) | (() => Validator)>;\n\nexport class Validator implements ValidatorTypeInterface {\n\tvalidations: Record<string, { payload?: any; fn: validateFunc | validateAsyncFunc }> = {};\n\n\tconstructor(private store: IvalidationStore, private validateName: string) {}\n\n\tpublic required(): Validator {\n\t\treturn this.register(ValidatorType.required, required);\n\t}\n\n\tpublic min(v: number): Validator {\n\t\treturn this.register(ValidatorType.min, min, v);\n\t}\n\n\tpublic minLength(v: number): Validator {\n\t\treturn this.register(ValidatorType.minLength, minLength, v);\n\t}\n\n\tpublic max(v: number): Validator {\n\t\treturn this.register(ValidatorType.max, max, v);\n\t}\n\n\tpublic maxLength(v: number): Validator {\n\t\treturn this.register(ValidatorType.maxLength, maxLength, v);\n\t}\n\n\tpublic email(): Validator {\n\t\treturn this.register(ValidatorType.email, email);\n\t}\n\n\tpublic phone(): Validator {\n\t\treturn this.register(ValidatorType.phone, phone);\n\t}\n\n\tpublic repeatPassword(payload: string): Validator {\n\t\tconst storeData = this.store.getData();\n\t\treturn this.register(ValidatorType.repeatPassword, repeatPassword, storeData ? storeData[payload] : undefined);\n\t}\n\n\tpublic url(): Validator {\n\t\treturn this.register(ValidatorType.url, url);\n\t}\n\tpublic regex(regex: RegExp): Validator {\n\t\treturn this.register(ValidatorType.regex, customRegex, regex);\n\t}\n\tprotected register(name: string, fn: validateFunc, payload?: any) {\n\t\tthis.validations[name] = {\n\t\t\tfn,\n\t\t\tpayload,\n\t\t};\n\t\treturn this;\n\t}\n\tprotected registerAsync(name: string, fn: validateAsyncFunc, payload?: any) {\n\t\tthis.validations[name] = {\n\t\t\tfn,\n\t\t\tpayload,\n\t\t};\n\t\treturn this;\n\t}\n\tpublic validate(name: string, fn: (value: any) => boolean, payload?: any) {\n\t\treturn this.register(\"custom_\" + this.validateName, fn, Number(payload));\n\t}\n\n\tpublic async(name: string, fn: (value: any) => Promise<boolean>, payload?: any) {\n\t\treturn this.registerAsync(\"custom_\" + this.validateName, fn, Number(payload));\n\t}\n}\n","import { reducer } from \"./reducer\";\nimport { ActionType } from \"../models/action-type\";\nimport { CreateInputOptions } from \"../models/create-input-options\";\nimport { Store } from \"./store\";\nimport { Validator } from \"../validator\";\nimport { ConfirmInner, FormRefreshType, FormUtils, InputState } from \"../models\";\n\nexport class FormBase {\n\tprivate readonly store: Store;\n\tconfirmRequired: ConfirmInner | null = null;\n\tconfirmPause: boolean = false;\n\tfragmentNumber: number = 0;\n\n\tconstructor({ refreshType = FormRefreshType.blur }: { refreshType?: FormRefreshType }) {\n\t\tthis.store = new Store(\n\t\t\t{\n\t\t\t\tformState: {\n\t\t\t\t\tformStatus: \"CLEAN\",\n\t\t\t\t\tformAttemptGlobalError: 0,\n\t\t\t\t\tformAttemptError: 0,\n\t\t\t\t\terror: null,\n\t\t\t\t\treadyToSubmit: false,\n\t\t\t\t\tconfirmed: false,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tdebounceNumber: 0,\n\t\t\t\t\trefreshType: refreshType,\n\t\t\t\t},\n\t\t\t\tinputStates: {},\n\t\t\t},\n\t\t\treducer\n\t\t);\n\t\t//I prefer to use this instead of fat arrow functions\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tpublic getStore() {\n\t\treturn this.store;\n\t}\n\n\tpublic onSubmit(fn: (data: any, utils: FormUtils) => Promise<void> | void) {\n\t\tif (this.confirmPause) return;\n\t\tconst data = this.store.getData();\n\t\tconst validate = this.validate(data);\n\t\tif (this.store.getFormState().loading) {\n\t\t\tconsole.warn(\"Double click detect\");\n\t\t}\n\t\tif (!validate) {\n\t\t\ttry {\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.CLEAR_GLOBAL_ERROR,\n\t\t\t\t});\n\n\t\t\t\tconst result = fn(data, {\n\t\t\t\t\tconfirm: (_fn: ConfirmInner) => {\n\t\t\t\t\t\tthis.confirmRequired = _fn;\n\t\t\t\t\t\tthis.confirmPause = true;\n\t\t\t\t\t\tthis.store.broadcast();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tif (result && result.then !== undefined) {\n\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\ttype: ActionType.SET_LOADING_ON,\n\t\t\t\t\t});\n\t\t\t\t\tconst promise: Promise<any> = result as Promise<any>;\n\t\t\t\t\tpromise\n\t\t\t\t\t\t.catch((e: any) => {\n\t\t\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\t\t\ttype: ActionType.SET_GLOBAL_ERROR,\n\t\t\t\t\t\t\t\tpayload: e,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\t\t\ttype: ActionType.SET_SUCCESS,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\t\t\ttype: ActionType.SET_LOADING_OFF,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (e: any) {\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.SET_GLOBAL_ERROR,\n\t\t\t\t\tpayload: { type: \"global\", payload: e },\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < validate.length; i++) {\n\t\t\t\tconst e = validate[i];\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.SET_INPUT_ERROR,\n\t\t\t\t\tpayload: { value: e.value, name: e.name, payload: e.payload, type: e.type },\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic createInput(name: string, options: CreateInputOptions) {\n\t\tconst inputState = this.store.createInput(name, options);\n\t\tconst formState = this.store.getFormState();\n\t\treturn {\n\t\t\tonChange: async (value: any) => {\n\t\t\t\tthis.store.dispatch({ type: ActionType.NEW_VALUE, payload: { value, name } });\n\t\t\t\tif (formState.refreshType === FormRefreshType.instant) {\n\t\t\t\t\tconst error = await this.validateInput(name, value);\n\n\t\t\t\t\tthis.dispatchError(value, inputState, error);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonBlur: async () => {\n\t\t\t\tthis.store.dispatch({ type: ActionType.BLURRED, payload: { name } });\n\t\t\t\tif (formState.refreshType === FormRefreshType.blur) {\n\t\t\t\t\tconst value = this.store.getInputState(name)?.value;\n\t\t\t\t\tconst error = await this.validateInput(name, value);\n\t\t\t\t\tthis.dispatchError(value, inputState, error);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic deleteInput(name: string) {\n\t\tthis.store.deleteInput(name);\n\t\t//todo\n\t}\n\n\tprivate async validateInput(name: string, value: any) {\n\t\tconst inputState = this.store.getInputState(name);\n\t\tif (!inputState || !inputState?.validation) return null;\n\t\tconst validationFn = inputState.validation;\n\t\tconst validator = new Validator(this.store, \"validator_\" + name);\n\t\tconst validation = validationFn(validator);\n\t\tconst vKeys = Object.keys(validation.validations);\n\t\tfor (let j = 0; j < vKeys.length; j++) {\n\t\t\tconst vKey = vKeys[j];\n\t\t\tconst vObj = validation.validations[vKey];\n\t\t\tconst obj = vObj.fn(value, vObj.payload);\n\t\t\t// @ts-ignore\n\t\t\tif (!obj) return { name: name, type: vKey, value, payload: vObj.payload };\n\t\t\t// @ts-ignore\n\t\t\tif (obj && obj.then) {\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.ASYNC_VALIDATION,\n\t\t\t\t\tpayload: { name: inputState.name, value: true },\n\t\t\t\t});\n\t\t\t\tconst result = await obj;\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn { name: name, type: vKey, value, payload: vObj.payload };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic validateFragment(fragmentNumber: number, fn: any) {\n\t\tconst data = this.store.getDataByFragment(fragmentNumber);\n\t\tconst errors = this.validate(data);\n\t\tif (!errors || errors.length === 0) {\n\t\t\tfn && fn();\n\t\t} else {\n\t\t\tfor (let i = 0; i < errors.length; i++) {\n\t\t\t\tconst e = errors[i];\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.SET_INPUT_ERROR,\n\t\t\t\t\tpayload: { value: e.value, name: e.name, payload: e.payload, type: e.type },\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t//todo: error make multiple\n\tprivate validate(data: any) {\n\t\tconst errors = [];\n\t\tconst keys = Object.keys(data);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst name = keys[i];\n\t\t\tconst inputState = this.store.getInputState(name);\n\t\t\tif (!inputState || !inputState?.validation) continue;\n\t\t\tconst validationFn = inputState?.validation;\n\t\t\tconst validator = new Validator(this.store, \"validator_\" + name);\n\t\t\tconst validation = validationFn(validator);\n\t\t\tconst vKeys = Object.keys(validation.validations);\n\t\t\tfor (let j = 0; j < vKeys.length; j++) {\n\t\t\t\tconst vKey = vKeys[j];\n\t\t\t\tconst vObj = validation.validations[vKey];\n\t\t\t\tif (!vObj.fn(data[name], vObj.payload)) {\n\t\t\t\t\terrors.push({ name: name, type: vKey, value: data[name], payload: vObj.payload });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tprivate dispatchError(\n\t\tvalue: number,\n\t\tinputState: InputState,\n\t\terror: undefined | null | { payload: any; name: string; type: string; value: any }\n\t) {\n\t\tif (error) {\n\t\t\tthis.store.dispatch({\n\t\t\t\ttype: ActionType.SET_INPUT_ERROR,\n\t\t\t\tpayload: { value, name: inputState.name, payload: error.payload, type: error.type },\n\t\t\t});\n\t\t} else if (inputState.error && !error) {\n\t\t\tthis.store.dispatch({\n\t\t\t\ttype: ActionType.CLEAN_INPUT_ERROR,\n\t\t\t\tpayload: { value, name: inputState.name },\n\t\t\t});\n\t\t}\n\t\tif (inputState.validateLoading) {\n\t\t\tthis.store.dispatch({\n\t\t\t\ttype: ActionType.ASYNC_VALIDATION,\n\t\t\t\tpayload: { name: inputState.name, value: false },\n\t\t\t});\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.getStore().getData();\n\t}\n\n\tconfirm(data: Record<string, any>) {\n\t\tthis.confirmPause = false;\n\t\tif (this.confirmRequired) this.confirmRequired(data);\n\t\tthis.store.broadcast();\n\t}\n\n\tconfirmCancel() {\n\t\tthis.confirmPause = false;\n\t\tthis.confirmRequired = null;\n\t\tthis.store.broadcast();\n\t}\n\n\tgetFragmentNumber() {\n\t\tconst fragmentNumber = this.fragmentNumber;\n\t\tthis.fragmentNumber++;\n\t\treturn fragmentNumber;\n\t}\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\n\nexport function useErrorForInput(formBase: FormBase, name: string) {\n\tconst [state, setState] = useState<any>(() => formBase.getStore().getInputState(name)?.error);\n\tconst [loading, setLoading] = useState<any>(() => formBase.getStore().getInputState(name)?.validateLoading);\n\tuseEffect(() => {\n\t\tconst inputState = formBase.getStore().getInputState(name);\n\t\tsetState(inputState?.error);\n\t\tsetLoading(inputState?.validateLoading);\n\t}, [formBase, name]);\n\tuseEffect(() => {\n\t\tconst callback = () => {\n\t\t\tconst inputState = formBase.getStore().getInputState(name);\n\t\t\tsetState(inputState?.error);\n\t\t\tsetLoading(inputState?.validateLoading);\n\t\t};\n\t\treturn formBase.getStore().subscribe(callback);\n\t}, [formBase, name]);\n\treturn { error: state, loading };\n}\n","import { FormBase } from \"../form-base\";\nimport { useEffect, useState } from \"react\";\n\nexport function useErrorForGlobal(formBase: FormBase) {\n\tconst [state, setState] = useState<any>(() => formBase.getStore().getFormState()?.error);\n\tuseEffect(() => {\n\t\tsetState(formBase.getStore().getFormState()?.error);\n\t}, [formBase]);\n\tuseEffect(() => {\n\t\tconst callback = () => {\n\t\t\tconst formState = formBase.getStore().getFormState();\n\t\t\tsetState(formState?.error);\n\t\t};\n\t\treturn formBase.getStore().subscribe(callback);\n\t}, [formBase]);\n\treturn state;\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { StoreState } from \"../../models\";\n\nexport function useLoading(formBase: FormBase) {\n\tconst [state, setState] = useState<any>(() => formBase.getStore().getFormState()?.loading);\n\tuseEffect(() => {\n\t\tsetState(formBase.getStore().getFormState()?.loading);\n\t}, [formBase]);\n\tuseEffect(() => {\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState(state.formState.loading);\n\t\t};\n\t\treturn formBase.getStore().subscribe(callback);\n\t}, [formBase]);\n\treturn state;\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { StoreState } from \"../../models\";\n\nexport function useStoreStateWatch(formBase: FormBase) {\n\tconst [state, setState] = useState<StoreState>(() => formBase.getStore().getState());\n\tuseEffect(() => {\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t});\n\t\t};\n\t\treturn formBase.getStore().subscribe(callback);\n\t}, [formBase]);\n\treturn state;\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../\";\nimport { StoreState } from \"../../models\";\n\nexport function useWatch(formBase: FormBase, name: string) {\n\tconst [state, setState] = useState<any>(() => formBase.getStore().getInputState(name)?.value);\n\tuseEffect(() => {\n\t\tsetState(formBase.getStore().getInputState(name)?.value);\n\t}, [formBase, name]);\n\tuseEffect(() => {\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState(state.inputStates[name]?.value);\n\t\t};\n\t\treturn formBase.getStore().subscribe(callback);\n\t}, [formBase, name]);\n\treturn state;\n}\n","import { FormBase } from \"./index\";\nimport { useInsertionEffect, useMemo } from \"react\";\n\nexport function useInput(\n\tformBase: FormBase,\n\tname: any,\n\tdefaultParams: { defaultValue?: any; fragmentId?: number | null; validation?: any }\n): { onChange: any; onBlur: any } {\n\tconst result = useMemo(() => {\n\t\treturn formBase.createInput(name, {\n\t\t\tdefaultValue: defaultParams.defaultValue,\n\t\t\tvalidation: defaultParams.validation,\n\t\t\tfragmentId: defaultParams.fragmentId,\n\t\t});\n\t}, [formBase, defaultParams.defaultValue, defaultParams.validation, defaultParams.fragmentId]);\n\tuseInsertionEffect(() => {\n\t\treturn () => formBase.deleteInput(name);\n\t}, [formBase, name]);\n\n\treturn result;\n}\n","import React, { createContext, useMemo } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { FormContextProps } from \"../models\";\n\nexport const FormContext = createContext<{ formBase: FormBase } | null>(null);\n\nexport function FormContextProvider(props: FormContextProps) {\n\tconst formBase: FormBase = useMemo(() => {\n\t\tif (props.formBase) {\n\t\t\treturn props.formBase;\n\t\t}\n\t\treturn new FormBase({\n\t\t\trefreshType: props.refreshType,\n\t\t});\n\t}, []);\n\treturn <FormContext.Provider value={{ formBase }}>{props.children}</FormContext.Provider>;\n}\n","import { useContext } from \"react\";\nimport { FormContext } from \"./form-context\";\nimport { FormBase } from \"../form-base\";\nimport { throwContextError } from \"../utils\";\n\nexport function useContextFormBase(): FormBase {\n\tconst context = useContext(FormContext);\n\tif (!context) {\n\t\tthrow throwContextError(\"useContextFormBase\");\n\t}\n\treturn context.formBase;\n}\n","export function throwContextError(name: string) {\n\treturn new Error(`You cannot use ${name} outside of Form Component`);\n}\n","import React, { useMemo } from \"react\";\nimport { FormContextProvider, useContextFormBase } from \"../form-context\";\nimport { useLoading } from \"../form-base\";\nimport { Confirm, ConfirmInner, FormDomProps, FormProps } from \"../models\";\n\nfunction InnerForm(props: FormDomProps) {\n\tconst formBase = useContextFormBase();\n\tconst isLoading = useLoading(formBase);\n\n\treturn (\n\t\t<form\n\t\t\t{...props}\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!isLoading) {\n\t\t\t\t\tformBase.onSubmit(props.onSubmit);\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport function Form(props: FormProps) {\n\tconst { refreshType, formBase, ...formProps } = props;\n\treturn (\n\t\t<FormContextProvider formBase={formBase} refreshType={refreshType}>\n\t\t\t<InnerForm {...formProps}>{props.children}</InnerForm>\n\t\t</FormContextProvider>\n\t);\n}\n","import React, { createContext, useMemo } from \"react\";\nimport { FormContextProps } from \"../models\";\n\nexport const FragmentContext = createContext<{ id: number } | null>(null);\n\nexport function FormFragment(props: FormContextProps) {\n\tconst id = useMemo(() => props.formBase.getFragmentNumber(), [props.formBase]);\n\treturn <FragmentContext.Provider value={{ id }}>{props.children}</FragmentContext.Provider>;\n}\n","import React, { useContext } from \"react\";\nimport { FragmentContext } from \"./fragment-context\";\n\nexport function useFragmentId(): number | null {\n\tconst context = useContext(FragmentContext);\n\treturn context ? context.id : null;\n}\n","import React from \"react\";\nimport { InputProps } from \"../models\";\nimport { useContextFormBase } from \"../form-context\";\nimport { useFragmentId } from \"../fragment/use-fragment-id\";\nimport { useInput } from \"../form-base/useInput\";\n\nexport function Input(inputProps: InputProps) {\n\tconst { name, validation, defaultValue, ...htmlProps } = inputProps;\n\tconst formBase = useContextFormBase();\n\tconst id = useFragmentId();\n\tconst { onChange, onBlur } = useInput(formBase, name, {\n\t\tdefaultValue,\n\t\tfragmentId: id,\n\t\tvalidation,\n\t});\n\treturn (\n\t\t<input\n\t\t\t{...htmlProps}\n\t\t\tname={name}\n\t\t\tonChange={(e) => {\n\t\t\t\tconst value = e.target.value;\n\t\t\t\tonChange(value);\n\t\t\t\thtmlProps.onChange && htmlProps.onChange(e);\n\t\t\t}}\n\t\t\tonBlur={(e) => {\n\t\t\t\tonBlur();\n\t\t\t\thtmlProps.onBlur && htmlProps.onBlur(e);\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import React, { useInsertionEffect } from \"react\";\nimport { TextareaProps } from \"../models\";\nimport { useContextFormBase } from \"../form-context\";\nimport { useFragmentId } from \"../fragment/use-fragment-id\";\nimport { useInput } from \"../form-base/useInput\";\n\nexport function Textarea(textareaProps: TextareaProps) {\n\tconst { name, defaultValue, validation, ...htmlProps } = textareaProps;\n\tconst formBase = useContextFormBase();\n\tconst id = useFragmentId();\n\tconst { onChange, onBlur } = useInput(formBase, name, {\n\t\tdefaultValue,\n\t\tfragmentId: id,\n\t\tvalidation,\n\t});\n\tuseInsertionEffect(() => {\n\t\treturn () => formBase.deleteInput(name);\n\t}, [formBase, name]);\n\treturn (\n\t\t<textarea\n\t\t\t{...htmlProps}\n\t\t\tname={name}\n\t\t\tonChange={(e) => {\n\t\t\t\tconst value = e.target.value;\n\t\t\t\tonChange(value);\n\t\t\t\thtmlProps.onChange && htmlProps.onChange(e);\n\t\t\t}}\n\t\t\tonBlur={(e) => {\n\t\t\t\tonBlur();\n\t\t\t\thtmlProps.onBlur && htmlProps.onBlur(e);\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import React from \"react\";\nimport { useContextFormBase } from \"../form-context\";\nimport { useErrorForGlobal } from \"../form-base\";\n\nexport function ErrorForGlobal({ errorMessage = \"Something went wrong\" }: { errorMessage?: string }) {\n\tconst formBase = useContextFormBase();\n\tconst error = useErrorForGlobal(formBase);\n\tif (!error) return null;\n\treturn <p>{errorMessage}</p>;\n}\n","import React from \"react\";\nimport { useContextFormBase } from \"../form-context\";\nimport { getErrorDefaultText } from \"../validator\";\nimport { useErrorForInput } from \"../form-base\";\n\nexport function ErrorForInput({ name }: { name: string }) {\n\tconst formBase = useContextFormBase();\n\tconst { error, loading } = useErrorForInput(formBase, name);\n\treturn (\n\t\t<p>\n\t\t\t{error ? getErrorDefaultText(error) : null}\n\t\t\t{loading ? <span>Loading</span> : null}\n\t\t</p>\n\t);\n}\n","import { ValidatorType } from \"./validator\";\n\nexport function getErrorDefaultText(error: { name: string; type: string; value: any; payload: any }) {\n\tswitch (error.type as ValidatorType) {\n\t\tcase ValidatorType.required:\n\t\t\treturn \"This Field is required.\";\n\t\tcase ValidatorType.min:\n\t\t\treturn \"Minimum required number is \" + error.payload;\n\t\tcase ValidatorType.minLength:\n\t\t\treturn (\n\t\t\t\t\"Minimum \" + error.payload + \" \" + (error.payload === 1 ? \"character\" : \"characters\") + \" are allowed\"\n\t\t\t);\n\t\tcase ValidatorType.max:\n\t\t\treturn \"Maximum required number is \" + error.payload;\n\t\tcase ValidatorType.maxLength:\n\t\t\treturn (\n\t\t\t\t\"Maximum \" + error.payload + \" \" + (error.payload === 1 ? \"character\" : \"characters\") + \" are allowed\"\n\t\t\t);\n\t\tcase ValidatorType.email:\n\t\t\treturn \"Please enter a valid email address.\";\n\t\tcase ValidatorType.phone:\n\t\t\treturn \"Please enter a valid phone number.\";\n\t\tcase ValidatorType.repeatPassword:\n\t\t\treturn (error && error.name ? error.name : \"Password \") + \" is not matched.\";\n\t\tcase ValidatorType.url:\n\t\t\treturn \"Please enter a valid url.\";\n\t}\n\treturn error.payload?.message || \"Invalid field\";\n}\n"],"names":["FormRefreshType","ActionType","throwNotRegistered","name","Error","instant","Debounce","time","__select_time","constructor","this","cb","reset","setTimeout","clearTimeout","reducer","state","action","type","SET_LOADING_ON","formState","loading","SET_LOADING_OFF","CLEAR_GLOBAL_ERROR","formStatus","error","SET_GLOBAL_ERROR","formAttemptGlobalError","payload","CLEAN_INPUT_ERROR","inputStates","Object","values","reduce","sum","value","SET_INPUT_ERROR","currentInputState","validateLoading","NEW_FORCED_VALUE","NEW_VALUE","_refreshValue","refreshType","debounceNumber","BLURRED","SET_SUCCESS","ASYNC_VALIDATION","Store","listeners","debounce","lastEvent","actionType","INIT","index","subscribe","fn","push","splice","indexOf","dispatch","broadcast","getData","data","keys","i","length","inputState","getValidationData","validateRequired","checkInputExist","getInputState","createInput","options","defaultValue","fragmentId","blurNumber","validation","deleteInput","getFormState","forEach","l","getState","getDataByFragment","fragmentNumber","phoneRegex","emailRegex","urlHttpRegex","required","min","_value","Number","isNaN","minLength","max","maxLength","email","toLowerCase","match","phone","repeatPassword","url","customRegex","regex","test","ValidatorType","Validator","store","validateName","validations","register","v","storeData","undefined","registerAsync","validate","async","FormBase","confirmRequired","confirmPause","blur","formAttemptError","readyToSubmit","confirmed","onSubmit","bind","getStore","console","warn","e","result","confirm","_fn","then","catch","finally","onChange","validateInput","dispatchError","onBlur","validationFn","vKeys","j","vKey","vObj","obj","validateFragment","errors","confirmCancel","getFragmentNumber","useErrorForInput","formBase","setState","useState","setLoading","useEffect","useErrorForGlobal","useLoading","useStoreStateWatch","useWatch","useInput","defaultParams","useMemo","useInsertionEffect","FormContext","createContext","FormContextProvider","props","React","createElement","Provider","children","useContextFormBase","context","useContext","InnerForm","isLoading","preventDefault","Form","formProps","FragmentContext","useFragmentId","id","Input","inputProps","htmlProps","target","Textarea","textareaProps","ErrorForGlobal","errorMessage","ErrorForInput","message","getErrorDefaultText"],"mappings":"+HAAYA,ECAAC,ECAN,SAAUC,EAAmBC,GAClC,OAAO,IAAIC,MAAM,IAAID,uBACtB,EFFA,SAAYH,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,SACA,CAHD,CAAYA,IAAAA,EAGX,CAAA,IGcaA,EAAgBK,QCVhBL,EAAgBK,QHP9B,SAAYJ,GACXA,EAAA,KAAA,OACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,iBAAA,mBACAA,EAAA,gBAAA,kBACAA,EAAA,kBAAA,oBACAA,EAAA,eAAA,iBACAA,EAAA,gBAAA,kBACAA,EAAA,iBAAA,mBACAA,EAAA,mBAAA,qBACAA,EAAA,YAAA,cACAA,EAAA,iBAAA,kBACA,CAbD,CAAYA,IAAAA,EAaX,CAAA,UIbYK,EACZC,KACAC,cAEAC,YAAYF,EAAO,KAClBG,KAAKH,KAAOA,EACZG,KAAKF,cAAgB,CACrB,CAEMG,GAAGA,GACTD,KAAKE,QAELF,KAAKF,cAAgBK,YAAW,KAC/BF,GAAMA,GAAI,GACRD,KAAKH,KACR,CAEOK,QACPE,aAAaJ,KAAKF,cAClB,ECfc,SAAAO,EAAQC,EAAmBC,GAC1C,OAAQA,EAAOC,MACd,KAAKjB,EAAWkB,eACfH,EAAMI,UAAUC,SAAU,EAC1B,MACD,KAAKpB,EAAWqB,gBACfN,EAAMI,UAAUC,SAAU,EAC1B,MACD,KAAKpB,EAAWsB,mBACfP,EAAMI,UAAUI,WAAa,QAC7BR,EAAMI,UAAUK,MAAQ,KACxB,MACD,KAAKxB,EAAWyB,iBACfV,EAAMI,UAAUI,WAAa,eAC7BR,EAAMI,UAAUO,yBAChBX,EAAMI,UAAUK,MAAQR,EAAOW,QAC/B,MACD,KAAK3B,EAAW4B,kBACWb,EAAMc,YAAYb,EAAOW,QAAQzB,MACzCsB,MAAQ,KACS,iBAA/BT,EAAMI,UAAUI,YACfO,OAAOC,OAAOhB,EAAMc,aAAaG,QAAO,CAACC,EAAKC,IAAUD,GAAOC,MAClEnB,EAAMI,UAAUI,WAAa,SAG/B,MACD,KAAKvB,EAAWmC,gBACf,GAAInB,EAAOW,QAAQzB,KAAM,CACxB,MAAMkC,EAAoBrB,EAAMc,YAAYb,EAAOW,QAAQzB,MAC3DkC,EAAkBZ,MAAQR,EAAOW,QACjCS,EAAkBC,iBAAkB,CACpC,CACD,MACD,KAAKrC,EAAWsC,iBAAkB,CACjC,MAAMX,EAAUX,EAAOW,QACjBO,EAAQP,EAAQO,MAChBE,EAAoBrB,EAAMc,YAAYF,EAAQzB,MACpD,IAAKkC,EACJ,MAAMnC,EAAmB0B,EAAQzB,MAElCkC,EAAkBF,MAAQA,EAC1B,KACA,CACD,KAAKlC,EAAWuC,UAAW,CAC1BxB,EAAMI,UAAUI,WAAa,QAC7B,MAAMI,EAAUX,EAAOW,QACjBO,EAAQP,EAAQO,MAChBE,EAAoBrB,EAAMc,YAAYF,EAAQzB,MACpD,IAAKkC,EACJ,MAAMnC,EAAmB0B,EAAQzB,MAEbkC,EAAkBF,QAElBA,IACpBE,EAAkBI,cAAgBN,EAC9BnB,EAAMI,UAAUsB,cAAgB1C,EAAgBK,UAC9CW,EAAMI,UAAUuB,gBAAqD,IAAnC3B,EAAMI,UAAUuB,iBACtDN,EAAkBF,MAAQA,KAG7B,KACA,CAED,KAAKlC,EAAW2C,QAAS,CACxB,MAAMhB,EAAUX,EAAOW,QACjBS,EAAoBrB,EAAMc,YAAYF,EAAQzB,MACpD,IAAKkC,EACJ,MAAMnC,EAAmB0B,EAAQzB,MAElCkC,EAAkBF,MAAQE,EAAkBI,cAC5C,KACA,CACD,KAAKxC,EAAW4C,YACf7B,EAAMI,UAAUI,WAAa,UAC7B,MAED,KAAKvB,EAAW6C,iBACf,GAAI7B,EAAOW,QAAQzB,KAAM,CACEa,EAAMc,YAAYb,EAAOW,QAAQzB,MACzCmC,gBAAkBrB,EAAOW,QAAQO,KACnD,CACD,MAED,QACC,MAAM,IAAI/B,MAAM,0BAGlB,OAAOY,CACR,OCrFa+B,EAKQ/B,MAA2BD,QAJvCiC,UAA6B,GAC7BC,SACRC,UAAuB,CAAEC,WAAYlD,EAAWmD,KAAMC,MAAO,GAE7D5C,YAAoBO,EAA2BD,GAA3BL,KAAKM,MAALA,EAA2BN,KAAOK,QAAPA,EAC9CL,KAAKuC,SAAW,IAAI3C,EAASU,EAAMI,UAAUuB,eAC7C,CAEMW,UAAUC,GAEhB,OADA7C,KAAKsC,UAAUQ,KAAKD,GACb,KACN7C,KAAKsC,UAAUS,OAAO/C,KAAKsC,UAAUU,QAAQH,GAAK,EAAE,CAErD,CAEMI,SAAS1C,GACfP,KAAKwC,UAAY,CAAEC,WAAYlC,EAAOC,KAAMmC,MAAO3C,KAAKwC,UAAUG,MAAQ,GAC1E3C,KAAKM,MAAQN,KAAKK,QAAQL,KAAKM,MAAOC,GAErCA,EAAOC,OAASjB,EAAWuC,WAC3B9B,KAAKM,MAAMI,UAAUuB,gBACrBjC,KAAKM,MAAMI,UAAUuB,eAAiB,EAEtCjC,KAAKuC,UAAUtC,IAAG,KACjBD,KAAKiD,SAAS,CAAEzC,KAAMjB,EAAWsC,iBAAkBX,QAASX,EAAOW,SAAU,IAG9ElB,KAAKkD,WAEN,CAGMC,UACN,IAAIC,EAA4B,CAAA,EAChC,MAAMC,EAAOhC,OAAOgC,KAAKrD,KAAKM,MAAMc,aACpC,IAAK,IAAIkC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACrC,MAAME,EAAaxD,KAAKM,MAAMc,YAAYiC,EAAKC,IAC/CF,EAAKI,EAAW/D,MAAQ+D,EAAW/B,KACnC,CACD,OAAO2B,CACP,CAGMK,oBACN,IAAIL,EAA4B,CAAA,EAChC,MAAMC,EAAOhC,OAAOgC,KAAKrD,KAAKM,MAAMc,aACpC,IAAK,IAAIkC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACrC,MAAME,EAAaxD,KAAKM,MAAMc,YAAYiC,EAAKC,IAC3CE,EAAWE,mBACdN,EAAKI,EAAW/D,MAAQ+D,EAAW/B,MAEpC,CACD,OAAO2B,CACP,CAEMO,gBAAgBlE,GAEtB,QAD0BO,KAAKM,MAAMc,YAAY3B,EAEjD,CAEMmE,cAAcnE,GACpB,OAAOO,KAAKM,MAAMc,YAAY3B,EAC9B,CAEMoE,YAAYpE,EAAcqE,GAChC,OAAQ9D,KAAKM,MAAMc,YAAY3B,GAAQ,CACtCA,KAAMA,EACNgC,MAAOqC,EAAQC,aACfC,WAAYF,EAAQE,WACpBpC,iBAAiB,EACjBG,cAAe+B,EAAQC,aACvBE,WAAY,EACZP,kBAAkB,EAClBQ,WAAYJ,EAAQI,WACpBnD,MAAO,KAER,CAEMoD,YAAY1E,GAElB,IAD0BO,KAAKM,MAAMc,YAAY3B,GAEhD,MAAMD,EAAmBC,UAEnBO,KAAKM,MAAMc,YAAY3B,EAC9B,CAED2E,eACC,OAAOpE,KAAKM,MAAMI,SAClB,CAEMwC,YACNlD,KAAKsC,UAAU+B,SAASC,GAAMA,EAAEtE,KAAKM,QACrC,CAEDiE,WACC,OAAOvE,KAAKM,KACZ,CAEDkE,kBAAkBC,GACjB,IAAIrB,EAA4B,CAAA,EAChC,MAAMC,EAAOhC,OAAOgC,KAAKrD,KAAKM,MAAMc,aACpC,IAAK,IAAIkC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACrC,MAAME,EAAaxD,KAAKM,MAAMc,YAAYiC,EAAKC,IAC3CE,EAAWQ,aAAeS,IAC7BrB,EAAKI,EAAW/D,MAAQ+D,EAAW/B,MAEpC,CACD,OAAO2B,CACP,ECnHK,MAAMsB,EAAa,2DAEbC,EACT,uJAESC,EACT,qGCLE,SAAUC,EAASpD,GACxB,QAASA,CACV,CAEgB,SAAAqD,EAAIrD,EAAYP,GAC/B,IAAI6D,EAASC,OAAOvD,GACpB,OAAQwD,MAAMF,IAAWA,EAAS7D,CACnC,CAEgB,SAAAgE,EAAUzD,EAAYP,GACrC,MAAwB,iBAAVO,GAAsBA,EAAM8B,OAASrC,CACpD,CAEgB,SAAAiE,EAAI1D,EAAYP,GAC/B,IAAI6D,EAASC,OAAOvD,GACpB,OAAQwD,MAAMF,IAAWA,EAAS7D,CACnC,CAEgB,SAAAkE,EAAU3D,EAAYP,GACrC,MAAwB,iBAAVO,GAAsBA,EAAM8B,OAASrC,CACpD,CAGM,SAAUmE,EAAM5D,GACrB,MAAwB,iBAAVA,KAAwBA,EAAM6D,cAAcC,MAAMZ,EACjE,CAGM,SAAUa,EAAM/D,GACrB,MAAwB,iBAAVA,KAAwBA,EAAM8D,MAAMb,EACnD,CAEgB,SAAAe,EAAehE,EAAYP,GAC1C,OAAOO,IAAUP,CAClB,CAGM,SAAUwE,EAAIjE,GACnB,MAAwB,iBAAVA,KAAwBA,EAAM8D,MAAMX,EACnD,CAEgB,SAAAe,EAAYlE,EAAYmE,GACvC,MAAwB,iBAAVnE,GAAsBmE,EAAMC,KAAKpE,EAChD,CC5BA,IAAYqE,GAAZ,SAAYA,GACXA,EAAA,SAAA,WACAA,EAAA,IAAA,MACAA,EAAA,UAAA,YACAA,EAAA,IAAA,MACAA,EAAA,UAAA,YACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,eAAA,iBACAA,EAAA,IAAA,MACAA,EAAA,MAAA,OACA,CAXD,CAAYA,IAAAA,EAWX,CAAA,UAIYC,EAGQC,MAAiCC,aAFrDC,YAAuF,CAAA,EAEvFnG,YAAoBiG,EAAiCC,GAAjCjG,KAAKgG,MAALA,EAAiChG,KAAYiG,aAAZA,CAAwB,CAEtEpB,WACN,OAAO7E,KAAKmG,SAASL,EAAcjB,SAAUA,EAC7C,CAEMC,IAAIsB,GACV,OAAOpG,KAAKmG,SAASL,EAAchB,IAAKA,EAAKsB,EAC7C,CAEMlB,UAAUkB,GAChB,OAAOpG,KAAKmG,SAASL,EAAcZ,UAAWA,EAAWkB,EACzD,CAEMjB,IAAIiB,GACV,OAAOpG,KAAKmG,SAASL,EAAcX,IAAKA,EAAKiB,EAC7C,CAEMhB,UAAUgB,GAChB,OAAOpG,KAAKmG,SAASL,EAAcV,UAAWA,EAAWgB,EACzD,CAEMf,QACN,OAAOrF,KAAKmG,SAASL,EAAcT,MAAOA,EAC1C,CAEMG,QACN,OAAOxF,KAAKmG,SAASL,EAAcN,MAAOA,EAC1C,CAEMC,eAAevE,GACrB,MAAMmF,EAAYrG,KAAKgG,MAAM7C,UAC7B,OAAOnD,KAAKmG,SAASL,EAAcL,eAAgBA,EAAgBY,EAAYA,EAAUnF,QAAWoF,EACpG,CAEMZ,MACN,OAAO1F,KAAKmG,SAASL,EAAcJ,IAAKA,EACxC,CACME,MAAMA,GACZ,OAAO5F,KAAKmG,SAASL,EAAcF,MAAOD,EAAaC,EACvD,CACSO,SAAS1G,EAAcoD,EAAkB3B,GAKlD,OAJAlB,KAAKkG,YAAYzG,GAAQ,CACxBoD,KACA3B,WAEMlB,IACP,CACSuG,cAAc9G,EAAcoD,EAAuB3B,GAK5D,OAJAlB,KAAKkG,YAAYzG,GAAQ,CACxBoD,KACA3B,WAEMlB,IACP,CACMwG,SAAS/G,EAAcoD,EAA6B3B,GAC1D,OAAOlB,KAAKmG,SAAS,UAAYnG,KAAKiG,aAAcpD,EAAImC,OAAO9D,GAC/D,CAEMuF,MAAMhH,EAAcoD,EAAsC3B,GAChE,OAAOlB,KAAKuG,cAAc,UAAYvG,KAAKiG,aAAcpD,EAAImC,OAAO9D,GACpE,QCzFWwF,EACKV,MACjBW,gBAAuC,KACvCC,cAAwB,EACxBnC,eAAyB,EAEzB1E,aAAYiC,YAAEA,EAAc1C,EAAgBuH,OAC3C7G,KAAKgG,MAAQ,IAAI3D,EAChB,CACC3B,UAAW,CACVI,WAAY,QACZG,uBAAwB,EACxB6F,iBAAkB,EAClB/F,MAAO,KACPgG,eAAe,EACfC,WAAW,EACXrG,SAAS,EACTsB,eAAgB,EAChBD,YAAaA,GAEdZ,YAAa,CAAE,GAEhBf,GAGDL,KAAKiH,SAAWjH,KAAKiH,SAASC,KAAKlH,KACnC,CAEMmH,WACN,OAAOnH,KAAKgG,KACZ,CAEMiB,SAASpE,GACf,GAAI7C,KAAK4G,aAAc,OACvB,MAAMxD,EAAOpD,KAAKgG,MAAM7C,UAClBqD,EAAWxG,KAAKwG,SAASpD,GAI/B,GAHIpD,KAAKgG,MAAM5B,eAAezD,SAC7ByG,QAAQC,KAAK,uBAETb,EA2CJ,IAAK,IAAIlD,EAAI,EAAGA,EAAIkD,EAASjD,OAAQD,IAAK,CACzC,MAAMgE,EAAId,EAASlD,GACnBtD,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWmC,gBACjBR,QAAS,CAAEO,MAAO6F,EAAE7F,MAAOhC,KAAM6H,EAAE7H,KAAMyB,QAASoG,EAAEpG,QAASV,KAAM8G,EAAE9G,OAEtE,MAhDD,IACCR,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWsB,qBAGlB,MAAM0G,EAAS1E,EAAGO,EAAM,CACvBoE,QAAUC,IACTzH,KAAK2G,gBAAkBc,EACvBzH,KAAK4G,cAAe,EACpB5G,KAAKgG,MAAM9C,WAAW,IAGxB,GAAIqE,QAA0BjB,IAAhBiB,EAAOG,KAAoB,CACxC1H,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWkB,iBAEY8G,EAE5BI,OAAOL,IACPtH,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWyB,iBACjBE,QAASoG,GACR,IAEFI,MAAK,KACL1H,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAW4C,aAChB,IAEFyF,SAAQ,KACR5H,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWqB,iBAChB,GAEJ,CAMD,CALC,MAAO0G,GACRtH,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWyB,iBACjBE,QAAS,CAAEV,KAAM,SAAUU,QAASoG,IAErC,CAUF,CAEMzD,YAAYpE,EAAcqE,GAChC,MAAMN,EAAaxD,KAAKgG,MAAMnC,YAAYpE,EAAMqE,GAC1CpD,EAAYV,KAAKgG,MAAM5B,eAC7B,MAAO,CACNyD,SAAUpB,MAAOhF,IAEhB,GADAzB,KAAKgG,MAAM/C,SAAS,CAAEzC,KAAMjB,EAAWuC,UAAWZ,QAAS,CAAEO,QAAOhC,UAChEiB,EAAUsB,cAAgB1C,EAAgBK,QAAS,CACtD,MAAMoB,QAAcf,KAAK8H,cAAcrI,EAAMgC,GAE7CzB,KAAK+H,cAActG,EAAO+B,EAAYzC,EACtC,GAEFiH,OAAQvB,UAEP,GADAzG,KAAKgG,MAAM/C,SAAS,CAAEzC,KAAMjB,EAAW2C,QAAShB,QAAS,CAAEzB,UACvDiB,EAAUsB,cAAgB1C,EAAgBuH,KAAM,CACnD,MAAMpF,EAAQzB,KAAKgG,MAAMpC,cAAcnE,IAAOgC,MACxCV,QAAcf,KAAK8H,cAAcrI,EAAMgC,GAC7CzB,KAAK+H,cAActG,EAAO+B,EAAYzC,EACtC,GAGH,CAEMoD,YAAY1E,GAClBO,KAAKgG,MAAM7B,YAAY1E,EAEvB,CAEOgH,oBAAoBhH,EAAcgC,GACzC,MAAM+B,EAAaxD,KAAKgG,MAAMpC,cAAcnE,GAC5C,IAAK+D,IAAeA,GAAYU,WAAY,OAAO,KACnD,MAEMA,GAAa+D,EAFEzE,EAAWU,YACd,IAAI6B,EAAU/F,KAAKgG,MAAO,aAAevG,IAErDyI,EAAQ7G,OAAOgC,KAAKa,EAAWgC,aACrC,IAAK,IAAIiC,EAAI,EAAGA,EAAID,EAAM3E,OAAQ4E,IAAK,CACtC,MAAMC,EAAOF,EAAMC,GACbE,EAAOnE,EAAWgC,YAAYkC,GAC9BE,EAAMD,EAAKxF,GAAGpB,EAAO4G,EAAKnH,SAEhC,IAAKoH,EAAK,MAAO,CAAE7I,KAAMA,EAAMe,KAAM4H,EAAM3G,QAAOP,QAASmH,EAAKnH,SAEhE,GAAIoH,GAAOA,EAAIZ,KAAM,CACpB1H,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAW6C,iBACjBlB,QAAS,CAAEzB,KAAM+D,EAAW/D,KAAMgC,OAAO,KAG1C,UADqB6G,EAEpB,MAAO,CAAE7I,KAAMA,EAAMe,KAAM4H,EAAM3G,QAAOP,QAASmH,EAAKnH,QAEvD,CACD,CACD,CACMqH,iBAAiB9D,EAAwB5B,GAC/C,MAAMO,EAAOpD,KAAKgG,MAAMxB,kBAAkBC,GACpC+D,EAASxI,KAAKwG,SAASpD,GAC7B,GAAKoF,GAA4B,IAAlBA,EAAOjF,OAGrB,IAAK,IAAID,EAAI,EAAGA,EAAIkF,EAAOjF,OAAQD,IAAK,CACvC,MAAMgE,EAAIkB,EAAOlF,GACjBtD,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWmC,gBACjBR,QAAS,CAAEO,MAAO6F,EAAE7F,MAAOhC,KAAM6H,EAAE7H,KAAMyB,QAASoG,EAAEpG,QAASV,KAAM8G,EAAE9G,OAEtE,MARDqC,GAAMA,GAUP,CAEO2D,SAASpD,GAChB,MAAMoF,EAAS,GACTnF,EAAOhC,OAAOgC,KAAKD,GACzB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACrC,MAAM7D,EAAO4D,EAAKC,GACZE,EAAaxD,KAAKgG,MAAMpC,cAAcnE,GAC5C,IAAK+D,IAAeA,GAAYU,WAAY,SAC5C,MAAM+D,EAAezE,GAAYU,WAE3BA,EAAa+D,EADD,IAAIlC,EAAU/F,KAAKgG,MAAO,aAAevG,IAErDyI,EAAQ7G,OAAOgC,KAAKa,EAAWgC,aACrC,IAAK,IAAIiC,EAAI,EAAGA,EAAID,EAAM3E,OAAQ4E,IAAK,CACtC,MAAMC,EAAOF,EAAMC,GACbE,EAAOnE,EAAWgC,YAAYkC,GACpC,IAAKC,EAAKxF,GAAGO,EAAK3D,GAAO4I,EAAKnH,SAAU,CACvCsH,EAAO1F,KAAK,CAAErD,KAAMA,EAAMe,KAAM4H,EAAM3G,MAAO2B,EAAK3D,GAAOyB,QAASmH,EAAKnH,UACvE,KACA,CACD,CACD,CACD,OAAOsH,CACP,CAEOT,cACPtG,EACA+B,EACAzC,GAEIA,EACHf,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAWmC,gBACjBR,QAAS,CAAEO,QAAOhC,KAAM+D,EAAW/D,KAAMyB,QAASH,EAAMG,QAASV,KAAMO,EAAMP,QAEpEgD,EAAWzC,QAAUA,GAC/Bf,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAW4B,kBACjBD,QAAS,CAAEO,QAAOhC,KAAM+D,EAAW/D,QAGjC+D,EAAW5B,iBACd5B,KAAKgG,MAAM/C,SAAS,CACnBzC,KAAMjB,EAAW6C,iBACjBlB,QAAS,CAAEzB,KAAM+D,EAAW/D,KAAMgC,OAAO,IAG3C,CAED0B,UACC,OAAOnD,KAAKmH,WAAWhE,SACvB,CAEDqE,QAAQpE,GACPpD,KAAK4G,cAAe,EAChB5G,KAAK2G,iBAAiB3G,KAAK2G,gBAAgBvD,GAC/CpD,KAAKgG,MAAM9C,WACX,CAEDuF,gBACCzI,KAAK4G,cAAe,EACpB5G,KAAK2G,gBAAkB,KACvB3G,KAAKgG,MAAM9C,WACX,CAEDwF,oBACC,MAAMjE,EAAiBzE,KAAKyE,eAE5B,OADAzE,KAAKyE,iBACEA,CACP,ECzOc,SAAAkE,EAAiBC,EAAoBnJ,GACpD,MAAOa,EAAOuI,GAAYC,GAAc,IAAMF,EAASzB,WAAWvD,cAAcnE,IAAOsB,SAChFJ,EAASoI,GAAcD,GAAc,IAAMF,EAASzB,WAAWvD,cAAcnE,IAAOmC,kBAc3F,OAbAoH,GAAU,KACT,MAAMxF,EAAaoF,EAASzB,WAAWvD,cAAcnE,GACrDoJ,EAASrF,GAAYzC,OACrBgI,EAAWvF,GAAY5B,gBAAgB,GACrC,CAACgH,EAAUnJ,IACduJ,GAAU,IAMFJ,EAASzB,WAAWvE,WALV,KAChB,MAAMY,EAAaoF,EAASzB,WAAWvD,cAAcnE,GACrDoJ,EAASrF,GAAYzC,OACrBgI,EAAWvF,GAAY5B,gBAAgB,KAGtC,CAACgH,EAAUnJ,IACP,CAAEsB,MAAOT,EAAOK,UACxB,CCjBM,SAAUsI,EAAkBL,GACjC,MAAOtI,EAAOuI,GAAYC,GAAc,IAAMF,EAASzB,WAAW/C,gBAAgBrD,QAWlF,OAVAiI,GAAU,KACTH,EAASD,EAASzB,WAAW/C,gBAAgBrD,MAAM,GACjD,CAAC6H,IACJI,GAAU,IAKFJ,EAASzB,WAAWvE,WAJV,KAChB,MAAMlC,EAAYkI,EAASzB,WAAW/C,eACtCyE,EAASnI,GAAWK,MAAM,KAGzB,CAAC6H,IACGtI,CACR,CCZM,SAAU4I,EAAWN,GAC1B,MAAOtI,EAAOuI,GAAYC,GAAc,IAAMF,EAASzB,WAAW/C,gBAAgBzD,UAUlF,OATAqI,GAAU,KACTH,EAASD,EAASzB,WAAW/C,gBAAgBzD,QAAQ,GACnD,CAACiI,IACJI,GAAU,IAIFJ,EAASzB,WAAWvE,WAHTtC,IACjBuI,EAASvI,EAAMI,UAAUC,QAAQ,KAGhC,CAACiI,IACGtI,CACR,CCZM,SAAU6I,EAAmBP,GAClC,MAAOtI,EAAOuI,GAAYC,GAAqB,IAAMF,EAASzB,WAAW5C,aASzE,OARAyE,GAAU,IAMFJ,EAASzB,WAAWvE,WALTtC,IACjBuI,EAAS,IACLvI,GACF,KAGD,CAACsI,IACGtI,CACR,CCXgB,SAAA8I,EAASR,EAAoBnJ,GAC5C,MAAOa,EAAOuI,GAAYC,GAAc,IAAMF,EAASzB,WAAWvD,cAAcnE,IAAOgC,QAUvF,OATAuH,GAAU,KACTH,EAASD,EAASzB,WAAWvD,cAAcnE,IAAOgC,MAAM,GACtD,CAACmH,EAAUnJ,IACduJ,GAAU,IAIFJ,EAASzB,WAAWvE,WAHTtC,IACjBuI,EAASvI,EAAMc,YAAY3B,IAAOgC,MAAM,KAGvC,CAACmH,EAAUnJ,IACPa,CACR,UCbgB+I,EACfT,EACAnJ,EACA6J,GAEA,MAAM/B,EAASgC,GAAQ,IACfX,EAAS/E,YAAYpE,EAAM,CACjCsE,aAAcuF,EAAcvF,aAC5BG,WAAYoF,EAAcpF,WAC1BF,WAAYsF,EAActF,cAEzB,CAAC4E,EAAUU,EAAcvF,aAAcuF,EAAcpF,WAAYoF,EAActF,aAKlF,OAJAwF,GAAmB,IACX,IAAMZ,EAASzE,YAAY1E,IAChC,CAACmJ,EAAUnJ,IAEP8H,CACR,CChBO,MAAMkC,EAAcC,EAA6C,MAElE,SAAUC,EAAoBC,GACnC,MAAMhB,EAAqBW,GAAQ,IAC9BK,EAAMhB,SACFgB,EAAMhB,SAEP,IAAIlC,EAAS,CACnB1E,YAAa4H,EAAM5H,eAElB,IACH,OAAO6H,EAACC,cAAAL,EAAYM,UAAStI,MAAO,CAAEmH,aAAagB,EAAMI,SAC1D,UCXgBC,IACf,MAAMC,EAAUC,EAAWV,GAC3B,IAAKS,EACJ,MCPM,IAAIxK,MAAM,kBDOQ,kDAEzB,OAAOwK,EAAQtB,QAChB,CENA,SAASwB,EAAUR,GAClB,MAAMhB,EAAWqB,IACXI,EAAYnB,EAAWN,GAE7B,OACCiB,2BACKD,EACJ3C,SAAWK,IACVA,EAAEgD,iBACGD,GACJzB,EAAS3B,SAAS2C,EAAM3C,SACxB,GAIL,CAEM,SAAUsD,EAAKX,GACpB,MAAM5H,YAAEA,EAAW4G,SAAEA,KAAa4B,GAAcZ,EAChD,OACCC,EAACC,cAAAH,EAAoB,CAAAf,SAAUA,EAAU5G,YAAaA,GACrD6H,EAACC,cAAAM,EAAc,IAAAI,GAAYZ,EAAMI,UAGpC,CC1BO,MAAMS,EAAkBf,EAAqC,eCApDgB,IACf,MAAMR,EAAUC,EAAWM,GAC3B,OAAOP,EAAUA,EAAQS,GAAK,IAC/B,CCAM,SAAUC,EAAMC,GACrB,MAAMpL,KAAEA,EAAIyE,WAAEA,EAAUH,aAAEA,KAAiB+G,GAAcD,EACnDjC,EAAWqB,IACXU,EAAKD,KACL7C,SAAEA,EAAQG,OAAEA,GAAWqB,EAAST,EAAUnJ,EAAM,CACrDsE,eACAC,WAAY2G,EACZzG,eAED,OACC2F,EAAAC,cAAA,QAAA,IACKgB,EACJrL,KAAMA,EACNoI,SAAWP,IACV,MAAM7F,EAAQ6F,EAAEyD,OAAOtJ,MACvBoG,EAASpG,GACTqJ,EAAUjD,UAAYiD,EAAUjD,SAASP,EAAE,EAE5CU,OAASV,IACRU,IACA8C,EAAU9C,QAAU8C,EAAU9C,OAAOV,EAAE,GAI3C,CCxBM,SAAU0D,EAASC,GACxB,MAAMxL,KAAEA,EAAIsE,aAAEA,EAAYG,WAAEA,KAAe4G,GAAcG,EACnDrC,EAAWqB,IACXU,EAAKD,KACL7C,SAAEA,EAAQG,OAAEA,GAAWqB,EAAST,EAAUnJ,EAAM,CACrDsE,eACAC,WAAY2G,EACZzG,eAKD,OAHAsF,GAAmB,IACX,IAAMZ,EAASzE,YAAY1E,IAChC,CAACmJ,EAAUnJ,IAEboK,EAAAC,cAAA,WAAA,IACKgB,EACJrL,KAAMA,EACNoI,SAAWP,IACV,MAAM7F,EAAQ6F,EAAEyD,OAAOtJ,MACvBoG,EAASpG,GACTqJ,EAAUjD,UAAYiD,EAAUjD,SAASP,EAAE,EAE5CU,OAASV,IACRU,IACA8C,EAAU9C,QAAU8C,EAAU9C,OAAOV,EAAE,GAI3C,UC7BgB4D,GAAeC,aAAEA,EAAe,yBAG/C,OADclC,EADGgB,KAGVJ,EAAAC,cAAA,IAAA,KAAIqB,GADQ,IAEpB,CCJgB,SAAAC,GAAc3L,KAAEA,IAC/B,MAAMmJ,EAAWqB,KACXlJ,MAAEA,EAAKJ,QAAEA,GAAYgI,EAAiBC,EAAUnJ,GACtD,OACCoK,EAAAC,cAAA,IAAA,KACE/I,ECRE,SAA8BA,GACnC,OAAQA,EAAMP,MACb,KAAKsF,EAAcjB,SAClB,MAAO,0BACR,KAAKiB,EAAchB,IAClB,MAAO,8BAAgC/D,EAAMG,QAC9C,KAAK4E,EAAcZ,UAClB,MACC,WAAanE,EAAMG,QAAU,KAAyB,IAAlBH,EAAMG,QAAgB,YAAc,cAAgB,eAE1F,KAAK4E,EAAcX,IAClB,MAAO,8BAAgCpE,EAAMG,QAC9C,KAAK4E,EAAcV,UAClB,MACC,WAAarE,EAAMG,QAAU,KAAyB,IAAlBH,EAAMG,QAAgB,YAAc,cAAgB,eAE1F,KAAK4E,EAAcT,MAClB,MAAO,sCACR,KAAKS,EAAcN,MAClB,MAAO,qCACR,KAAKM,EAAcL,eAClB,OAAQ1E,GAASA,EAAMtB,KAAOsB,EAAMtB,KAAO,aAAe,mBAC3D,KAAKqG,EAAcJ,IAClB,MAAO,4BAET,OAAO3E,EAAMG,SAASmK,SAAW,eAClC,CDlBYC,CAAoBvK,GAAS,KACrCJ,EAAUkJ,EAAoBC,cAAA,OAAA,KAAA,WAAG,KAGrC"}