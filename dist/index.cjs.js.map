{"version":3,"file":"index.cjs.js","sources":["../src/models/form-refresh-type.ts","../src/models/action-type.ts","../src/utils/throw-not-registered.ts","../src/models/store-global-options.ts","../src/utils/debounce.ts","../src/form-base/reducer.ts","../src/form-base/store.ts","../src/validator/regex-list.ts","../src/validator/validate-utis.ts","../src/validator/validator.ts","../src/form-context/form-context.tsx","../src/form-base/form-base.ts","../src/validator/get-error-default-text.ts","../src/form-base/hooks/use-confirm.tsx","../src/form-context/use-context-form-base.tsx","../src/utils/throw-context-error.ts","../src/form-base/hooks/use-create-input.ts","../src/form-base/hooks/use-error-for-global.ts","../src/form-base/hooks/use-error-for-input.ts","../src/form-base/hooks/use-event-change.ts","../src/form-base/hooks/use-watch.ts","../src/form-base/hooks/use-loading.tsx","../src/form-base/hooks/use-response-data-watch.ts","../src/form-base/hooks/use-store-state-watch.ts"],"sourcesContent":["import { FormBase } from \"../form-base\";\n\nexport enum FormRefreshType {\n\tblur = \"blur\",\n\tinstant = \"instant\",\n}\nexport enum FormShouldValidateType {\n\tYES = \"YES\",\n\tAFTER_FIRST_SUBMIT_ATTEMPT = \"AFTER_FIRST_SUBMIT_ATTEMPT\",\n\tNO = \"NO\",\n}\ntype ShouldValidateFunc = (formBase: FormBase) => boolean;\nexport type FormShouldValidate = FormShouldValidateType | ShouldValidateFunc;\n","export enum ActionType {\n\tINIT = \"INIT\",\n\tNEW_VALUE = \"NEW_VALUE\",\n\tBLURRED = \"BLURRED\",\n\tASYNC_VALIDATION = \"ASYNC_VALIDATION\",\n\tSUBMIT_STARTED = \"SUBMIT_STARTED\",\n\tSUBMIT_ERROR = \"SUBMIT_ERROR\",\n\tSUBMIT_SUCCEED = \"SUBMIT_SUCCEED\",\n\tNEW_VALUE_DEBOUNCED = \"NEW_VALUE_DEBOUNCED\",\n\tBLURRED_DEBOUNCED = \"BLURRED_DEBOUNCED\",\n}\n\nexport interface EventType {\n\tindex: number;\n\tactionProps: ActionProps;\n}\nexport type ActionProps = { type: ActionType; payload?: any };\nexport interface InputStateProps {\n\tname: string;\n}\nexport interface NewValueProps extends InputStateProps {\n\tvalidateRequired: boolean | undefined;\n\terror: any;\n\tvalue: number;\n}\nexport interface BlurStateProps extends InputStateProps {\n\tvalidateRequired: boolean | undefined;\n\terror: any;\n}\nexport interface DebounceChangeType extends InputStateProps {\n\tvalidateRequired: boolean | undefined;\n\terror: any;\n}\nexport interface AsyncValidationProps extends InputStateProps {\n\tforSubmit: boolean;\n\tvalue: any;\n}\nexport interface SubmitStartedProps {\n\tconfirmActive: boolean;\n}\nexport interface SubmitErrorPayload {\n\terror: any;\n}\n","export function throwNotRegistered(name: string) {\n\treturn new Error(`\"${name}\" is not registered`);\n}\n","import { FormRefreshType } from \"./form-refresh-type\";\n\nexport interface StoreGlobalOptions {\n\trefreshType: FormRefreshType;\n\tdebounceNumber?: number;\n}\nexport const defaultStoreGlobalOptions: StoreGlobalOptions = {\n\trefreshType: FormRefreshType.instant,\n\tdebounceNumber: undefined,\n};\n","export class Debounce {\n\ttime: number;\n\t__select_time: 0;\n\n\tconstructor(time = 800) {\n\t\tthis.time = time;\n\t\tthis.__select_time = 0;\n\t}\n\n\tpublic cb(cb: any) {\n\t\tthis.reset();\n\t\t// @ts-ignore\n\t\tthis.__select_time = setTimeout(() => {\n\t\t\tcb && cb();\n\t\t}, this.time);\n\t}\n\n\tprivate reset() {\n\t\tclearTimeout(this.__select_time);\n\t}\n}\n","import {\n\tActionProps,\n\tActionType,\n\tAsyncValidationProps,\n\tBlurStateProps,\n\tDebounceChangeType,\n\tNewValueProps,\n\tSubmitErrorPayload,\n\tSubmitStartedProps,\n} from \"../models/action-type\";\nimport { throwNotRegistered } from \"../utils\";\nimport { FormRefreshType, InputState, StoreState } from \"../models\";\n\nexport function reducer(state: StoreState, action: ActionProps): StoreState {\n\tfunction setError(currentInputState: InputState) {\n\t\tif (currentInputState.error) {\n\t\t\tstate.formState.formStatus = \"ERROR\";\n\t\t} else {\n\t\t\tif (state.formState.formStatus !== \"ERROR\") {\n\t\t\t\tstate.formState.formStatus = \"NOT-CLEAN\";\n\t\t\t} else {\n\t\t\t\tstate.formState.formStatus = Object.values(state.inputStates).reduce((p, c) => p && !!c.error, false)\n\t\t\t\t\t? \"ERROR\"\n\t\t\t\t\t: \"NOT-CLEAN\";\n\t\t\t}\n\t\t}\n\t}\n\n\tswitch (action.type) {\n\t\tcase ActionType.INIT:\n\t\t\tstate.formState.formStatus = \"CLEAN\";\n\t\t\tbreak;\n\t\tcase ActionType.BLURRED_DEBOUNCED:\n\t\tcase ActionType.NEW_VALUE_DEBOUNCED: {\n\t\t\tconst payload = action.payload as DebounceChangeType;\n\t\t\tconst error = payload.error;\n\t\t\tconst validateRequired = payload.validateRequired;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tcurrentInputState.value = currentInputState._refreshValue;\n\t\t\tif (error && !Array.isArray(error)) {\n\t\t\t\tthrow new Error(\"error must be array\");\n\t\t\t}\n\t\t\tcurrentInputState.error = error;\n\t\t\tcurrentInputState.validateRequired = validateRequired ?? currentInputState.validateRequired;\n\t\t\tsetError(currentInputState);\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.NEW_VALUE: {\n\t\t\tconst payload = action.payload as NewValueProps;\n\t\t\tconst value = payload.value;\n\t\t\tconst error = payload.error;\n\t\t\tconst validateRequired = payload.validateRequired;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tcurrentInputState._refreshValue = value;\n\t\t\tif (state.formState.refreshType === FormRefreshType.instant) {\n\t\t\t\tif (!state.formState.debounceNumber || state.formState.debounceNumber === 0) {\n\t\t\t\t\tcurrentInputState.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (error && !Array.isArray(error)) {\n\t\t\t\tthrow new Error(\"error must be array\");\n\t\t\t}\n\t\t\tcurrentInputState.error = error;\n\t\t\tcurrentInputState.validateRequired = validateRequired ?? currentInputState.validateRequired;\n\t\t\tsetError(currentInputState);\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.BLURRED: {\n\t\t\tif (state.formState.refreshType !== FormRefreshType.blur) break;\n\t\t\tconst payload = action.payload as BlurStateProps;\n\t\t\tconst error = payload.error;\n\t\t\tconst validateRequired = payload.validateRequired;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tcurrentInputState.value = currentInputState._refreshValue;\n\t\t\tif (error && !Array.isArray(error)) {\n\t\t\t\tthrow new Error(\"error must be array\");\n\t\t\t}\n\t\t\tcurrentInputState.error = error;\n\t\t\tcurrentInputState.validateRequired = validateRequired ?? currentInputState.validateRequired;\n\t\t\tsetError(currentInputState);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase ActionType.SUBMIT_STARTED: {\n\t\t\tconst payload = action.payload as SubmitStartedProps;\n\t\t\tstate.formState.loading = true;\n\t\t\tstate.formState.confirmActive = payload.confirmActive;\n\t\t\tstate.formState.submitAttemptNumber++;\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.SUBMIT_SUCCEED: {\n\t\t\tstate.formState.confirmActive = false;\n\t\t\tstate.formState.loading = false;\n\t\t\tObject.values(state.inputStates).forEach((s) => {\n\t\t\t\ts.validateRequired = false;\n\t\t\t});\n\t\t\tstate.formState.formStatus = \"SUCCESS\";\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.SUBMIT_ERROR: {\n\t\t\tconst payload = action.payload as SubmitErrorPayload;\n\t\t\tstate.formState.confirmActive = false;\n\t\t\tstate.formState.loading = false;\n\t\t\tObject.values(state.inputStates).forEach((s) => {\n\t\t\t\ts.validateRequired = false;\n\t\t\t});\n\t\t\tstate.formState.formStatus = \"ERROR\";\n\t\t\tconst error = payload.error;\n\t\t\tif (!error) {\n\t\t\t\tconsole.warn(\"Wrong usage, error must be filled if success is false\");\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(error)) {\n\t\t\t\t\terror.forEach((e) => {\n\t\t\t\t\t\tif (e instanceof Error || !e.name) {\n\t\t\t\t\t\t\tstate.formState.error = e;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst currentInputState = state.inputStates[e.name];\n\t\t\t\t\t\t\tif (currentInputState) {\n\t\t\t\t\t\t\t\tcurrentInputState.error = Array.isArray(e) ? e : [e];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (error instanceof Error || !error.name) {\n\t\t\t\t\t\tstate.formState.error = error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst currentInputState = state.inputStates[error.name];\n\t\t\t\t\t\tif (currentInputState) {\n\t\t\t\t\t\t\tcurrentInputState.error = [error];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase ActionType.ASYNC_VALIDATION: {\n\t\t\tconst payload = action.payload as AsyncValidationProps;\n\t\t\tconst currentInputState = state.inputStates[payload.name];\n\t\t\tif (!currentInputState) {\n\t\t\t\tthrow throwNotRegistered(payload.name);\n\t\t\t}\n\t\t\tif (payload.forSubmit) {\n\t\t\t\tstate.formState.loading = payload.value;\n\t\t\t}\n\t\t\tcurrentInputState.validateLoading = payload.value;\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected Action Type\");\n\t}\n\n\treturn state;\n}\n","import { Debounce } from \"../utils\";\nimport { CreateInputOptions, FormRawData, FormRefreshType, IValidationStore, StoreState } from \"../models\";\nimport { ActionProps, ActionType, EventType } from \"../models/action-type\";\nimport { ValidatorToValidatorFunc } from \"../validator\";\n\ntype SubscribeType = (state: StoreState) => void;\n\nexport class Store implements IValidationStore {\n\tprivate listeners: SubscribeType[] = [];\n\tprivate instantListeners: SubscribeType[] = [];\n\tprivate readonly debounce?: Debounce;\n\tpublic __inputValidationFunctions__: Record<string, ValidatorToValidatorFunc> = {};\n\tpublic __lastEvent__: EventType = { actionProps: { type: ActionType.INIT, payload: undefined }, index: 0 };\n\n\tconstructor(public state: StoreState, private reducer: (state: StoreState, action: ActionProps) => StoreState) {\n\t\tthis.debounce =\n\t\t\tstate.formState.debounceNumber && state.formState.debounceNumber > 0\n\t\t\t\t? new Debounce(state.formState.debounceNumber)\n\t\t\t\t: undefined;\n\t}\n\n\tpublic subscribe(fn: SubscribeType) {\n\t\tthis.listeners.push(fn);\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.indexOf(fn), 1);\n\t\t};\n\t}\n\n\tpublic subscribeInstant(fn: (state: StoreState) => void) {\n\t\tthis.instantListeners.push(fn);\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.instantListeners.indexOf(fn), 1);\n\t\t};\n\t}\n\n\tpublic dispatch(action: ActionProps) {\n\t\tthis.__lastEvent__ = {\n\t\t\tactionProps: { type: action.type, payload: action.payload },\n\t\t\tindex: this.__lastEvent__.index + 1,\n\t\t};\n\n\t\tif (\n\t\t\t((action.type === ActionType.NEW_VALUE && this.state.formState.refreshType === FormRefreshType.instant) ||\n\t\t\t\t(action.type === ActionType.BLURRED && this.state.formState.refreshType === FormRefreshType.blur)) &&\n\t\t\tthis.state.formState.debounceNumber &&\n\t\t\tthis.state.formState.debounceNumber > 0\n\t\t) {\n\t\t\tconsole.log(\"debounce\", action, this.state.formState.refreshType);\n\t\t\tthis.debounce?.cb(() => {\n\t\t\t\tif (action.type === ActionType.BLURRED) {\n\t\t\t\t\tthis.dispatch({ type: ActionType.NEW_VALUE_DEBOUNCED, payload: action.payload });\n\t\t\t\t} else {\n\t\t\t\t\tthis.dispatch({ type: ActionType.BLURRED_DEBOUNCED, payload: action.payload });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.state = this.reducer(this.state, action);\n\t\t\tthis.instantBroadcast();\n\t\t\tthis.broadcast();\n\t\t}\n\t}\n\n\tpublic getValidationData(): FormRawData {\n\t\treturn Object.entries(this.state.inputStates)\n\t\t\t.filter(([, inputState]) => inputState.validateRequired)\n\t\t\t.reduce<FormRawData>((data, [key, inputState]) => {\n\t\t\t\tdata[key] = inputState.value;\n\t\t\t\treturn data;\n\t\t\t}, {});\n\t}\n\n\tpublic createInput(name: string, options: CreateInputOptions) {\n\t\tif (this.state.inputStates[name]) {\n\t\t\treturn this.state.inputStates[name];\n\t\t} else {\n\t\t\tthis.state.inputStates[name] = {\n\t\t\t\tname: name,\n\t\t\t\tvalue: options.defaultValue,\n\t\t\t\tvalidateLoading: false,\n\t\t\t\t_refreshValue: options.defaultValue,\n\t\t\t\tvalidateRequired: true,\n\t\t\t\terror: undefined,\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic broadcast() {\n\t\tthis.listeners.forEach((l) => l(this.state));\n\t}\n\n\tpublic instantBroadcast() {\n\t\tthis.instantListeners.forEach((l) => l(this.state));\n\t}\n\n\tpublic getRawData(): FormRawData {\n\t\treturn Object.entries(this.state.inputStates).reduce<FormRawData>((data, [key, inputState]) => {\n\t\t\tdata[key] = inputState.value;\n\t\t\treturn data;\n\t\t}, {});\n\t}\n\n\tpublic getShouldValidateAgain() {\n\t\treturn Object.values(this.state.inputStates).reduce((sum, r) => sum || r.validateRequired, false);\n\t}\n\n\tpublic addValidation(name: string, validation?: ValidatorToValidatorFunc) {\n\t\tif (validation) {\n\t\t\tthis.__inputValidationFunctions__[name] = validation;\n\t\t} else {\n\t\t\tthis.__inputValidationFunctions__[name] = undefined;\n\t\t}\n\t}\n}\n","//cp: https://stackoverflow.com/a/29767609\nexport const phoneRegex = /^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im;\n//cp: https://stackoverflow.com/a/46181\nexport const emailRegex =\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//cp: https://stackoverflow.com/a/3809435\nexport const urlHttpRegex =\n\t/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/;\n","import { emailRegex, phoneRegex, urlHttpRegex } from \"./regex-list\";\n\nexport function required(value: any): boolean {\n\treturn !!value;\n}\n\nexport function min(value: any, payload: number): boolean {\n\tif (!value) return true;\n\tlet _value = Number(value);\n\treturn !isNaN(_value) && _value > payload;\n}\n\nexport function minLength(value: any, payload: number): boolean {\n\tif (!value) return true;\n\treturn typeof value === \"string\" && value.length > payload;\n}\n\nexport function max(value: any, payload: number) {\n\tif (!value) return true;\n\tlet _value = Number(value);\n\treturn !isNaN(_value) && _value < payload;\n}\n\nexport function maxLength(value: any, payload: number): boolean {\n\tif (!value) return true;\n\treturn typeof value === \"string\" && value.length < payload;\n}\n\n//inspired: https://stackoverflow.com/a/46181\nexport function email(value: any): boolean {\n\tif (!value) return true;\n\treturn typeof value === \"string\" && !!value.toLowerCase().match(emailRegex);\n}\n\n//inspired: https://stackoverflow.com/a/29767609\nexport function phone(value: any): boolean {\n\tif (!value) return true;\n\treturn typeof value === \"string\" && !!value.match(phoneRegex);\n}\n\nexport function repeatPassword(value: any, payload?: string): boolean {\n\tif (!payload) return true;\n\treturn value === payload;\n}\n\n//inspired: https://stackoverflow.com/a/3809435\nexport function url(value: any): boolean {\n\tif (!value) return true;\n\treturn typeof value === \"string\" && !!value.match(urlHttpRegex);\n}\n\nexport function customRegex(value: any, regex: RegExp): boolean {\n\tif (!value) return true;\n\treturn typeof value === \"string\" && regex.test(value);\n}\n","import {\n\tcustomRegex,\n\temail,\n\tmax,\n\tmaxLength,\n\tmin,\n\tminLength,\n\tphone,\n\trepeatPassword,\n\trequired,\n\turl,\n} from \"./validate-utis\";\nimport { IValidationStore } from \"../models\";\n\ntype validateFunc = ((value: any, payload: any) => boolean) | ((value: any) => boolean);\ntype validateAsyncFunc = ((value: any, payload: any) => boolean) | ((value: any) => Promise<boolean>);\nexport type ValidatorToValidatorFunc = ((v: Validator) => Validator) | undefined;\nexport enum ValidatorType {\n\trequired = \"required\",\n\tmin = \"min\",\n\tminLength = \"minLength\",\n\tmax = \"max\",\n\tmaxLength = \"maxLength\",\n\temail = \"email\",\n\tphone = \"phone\",\n\trepeatPassword = \"repeatPassword\",\n\turl = \"url\",\n\tregex = \"regex\",\n}\n\ntype ValidatorTypeInterface = Record<ValidatorType, ((payload: any) => Validator) | (() => Validator)>;\n\ninterface ValidatorSettings {\n\tvalidateAll: boolean;\n}\n\nexport class Validator implements ValidatorTypeInterface {\n\tvalidations: Record<string, { payload?: any; fn: validateFunc | validateAsyncFunc; async: boolean }> = {};\n\tsettings: ValidatorSettings = { validateAll: false };\n\tconstructor(private store: IValidationStore, private validateName: string) {}\n\n\tpublic required(): Validator {\n\t\treturn this.register(ValidatorType.required, required);\n\t}\n\n\tpublic min(v: number): Validator {\n\t\treturn this.register(ValidatorType.min, min, v);\n\t}\n\n\tpublic minLength(v: number): Validator {\n\t\treturn this.register(ValidatorType.minLength, minLength, v);\n\t}\n\n\tpublic max(v: number): Validator {\n\t\treturn this.register(ValidatorType.max, max, v);\n\t}\n\n\tpublic maxLength(v: number): Validator {\n\t\treturn this.register(ValidatorType.maxLength, maxLength, v);\n\t}\n\n\tpublic email(): Validator {\n\t\treturn this.register(ValidatorType.email, email);\n\t}\n\n\tpublic phone(): Validator {\n\t\treturn this.register(ValidatorType.phone, phone);\n\t}\n\n\tpublic repeatPassword(payload: string): Validator {\n\t\tconst storeData = this.store.getRawData();\n\t\treturn this.register(ValidatorType.repeatPassword, repeatPassword, storeData ? storeData[payload] : undefined);\n\t}\n\n\tpublic url(): Validator {\n\t\treturn this.register(ValidatorType.url, url);\n\t}\n\n\tpublic regex(regex: RegExp): Validator {\n\t\treturn this.register(ValidatorType.regex, customRegex, regex);\n\t}\n\n\tpublic validate(name: string, fn: (value: any) => boolean, payload?: any) {\n\t\treturn this.register(\"custom_\" + this.validateName, fn, Number(payload));\n\t}\n\n\tpublic async(name: string, fn: (value: any) => Promise<boolean>, payload?: any) {\n\t\treturn this.registerAsync(name, fn, payload);\n\t}\n\tpublic set(param: { validateAll: boolean }) {\n\t\tthis.settings = {\n\t\t\t...this.settings,\n\t\t\tvalidateAll: param.validateAll,\n\t\t};\n\t\treturn this;\n\t}\n\tprotected register(name: string, fn: validateFunc, payload?: any) {\n\t\tthis.validations[name] = {\n\t\t\tfn,\n\t\t\tpayload,\n\t\t\tasync: false,\n\t\t};\n\t\treturn this;\n\t}\n\n\tprotected registerAsync(name: string, fn: validateAsyncFunc, payload?: any) {\n\t\tthis.validations[name] = {\n\t\t\tfn,\n\t\t\tpayload,\n\t\t\tasync: true,\n\t\t};\n\t\treturn this;\n\t}\n}\n","import React, { createContext, useMemo } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { FormContextProps } from \"../models\";\n\nexport const FormContext = createContext<{ formBase: FormBase } | null>(null);\n\nexport function FormContextProvider(props: FormContextProps) {\n\tconst formBase = useMemo(\n\t\t() =>\n\t\t\tnew FormBase({\n\t\t\t\trefreshType: props?.refreshType,\n\t\t\t\tshouldValidate: props?.shouldValidate,\n\t\t\t\tdebounceNumber: props?.debounceNumber,\n\t\t\t}),\n\t\t[props?.refreshType, props?.shouldValidate]\n\t);\n\treturn <FormContext.Provider value={{ formBase }}>{props.children}</FormContext.Provider>;\n}\n","import { reducer } from \"./reducer\";\nimport { ActionType } from \"../models/action-type\";\nimport { Store } from \"./store\";\nimport { Validator, ValidatorToValidatorFunc } from \"../validator\";\nimport {\n\tConfirm,\n\tConfirmForm,\n\tCreateInputOptions,\n\tFormRefreshType,\n\tFormShouldValidateType,\n\tFormState,\n\tFormUtils,\n\tResponseData,\n\tUseFormBaseProps,\n\tValidateError,\n} from \"../models\";\nimport { throwNotRegistered } from \"../utils\";\n\ntype SubmitResult = Promise<void> | void;\n\nexport class FormBase {\n\tconfirm: ConfirmForm | null = null;\n\tpublic readonly store: Store;\n\n\tconstructor({\n\t\trefreshType = FormRefreshType.blur,\n\t\tshouldValidate = FormShouldValidateType.AFTER_FIRST_SUBMIT_ATTEMPT,\n\t\tdebounceNumber = undefined,\n\t}: UseFormBaseProps) {\n\t\tthis.store = new Store(\n\t\t\t{\n\t\t\t\tformState: {\n\t\t\t\t\tformStatus: \"CLEAN\",\n\t\t\t\t\tconfirmActive: false,\n\t\t\t\t\terror: null,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tdebounceNumber,\n\t\t\t\t\trefreshType,\n\t\t\t\t\tshouldValidate,\n\t\t\t\t\tsubmitAttemptNumber: 0,\n\t\t\t\t},\n\t\t\t\tinputStates: {},\n\t\t\t},\n\t\t\treducer\n\t\t);\n\t\t//I prefer to use this instead of fat arrow functions\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tpublic getDataWithoutValidation(): ResponseData {\n\t\tconst data = this.store.getRawData();\n\t\treturn {\n\t\t\tisValid: undefined,\n\t\t\tvalidateErrors: undefined,\n\t\t\tshouldValidateAgain: this.store.getShouldValidateAgain(),\n\t\t\tloading: this.store.state.formState.loading,\n\t\t\tdata,\n\t\t};\n\t}\n\n\tpublic async getDataWithValidation(\n\t\tvalidate: boolean,\n\t\t{ validateLoading }: { validateLoading: boolean }\n\t): Promise<ResponseData> {\n\t\tconst data = this.store.getRawData();\n\t\tconst responseData: ResponseData = {\n\t\t\tisValid: undefined,\n\t\t\tvalidateErrors: undefined,\n\t\t\tshouldValidateAgain: this.store.getShouldValidateAgain(),\n\t\t\tloading: this.store.state.formState.loading,\n\t\t\tdata,\n\t\t};\n\t\tif (validate) {\n\t\t\tconst validateErrors = await this.validate(data, { validateLoading });\n\t\t\tresponseData.isValid = !(validateErrors && validateErrors.length);\n\t\t\tresponseData.validateErrors = validateErrors;\n\t\t}\n\t\treturn responseData;\n\t}\n\n\tpublic async onSubmit(formSubmitFunction?: (data: ResponseData, utils: FormUtils) => SubmitResult) {\n\t\tconst state = this.store.state;\n\t\tconst formState = state.formState;\n\t\tObject.values(state.inputStates).forEach((is) => {\n\t\t\tis.value = is._refreshValue;\n\t\t});\n\t\tif (formState.loading) {\n\t\t\tconsole.warn(\"Double click detect\");\n\t\t}\n\t\tif (formState.confirmActive) {\n\t\t\tconsole.warn(\"Form submitted when confirm active\");\n\t\t}\n\t\tthis.store.dispatch({\n\t\t\ttype: ActionType.SUBMIT_STARTED,\n\t\t\tpayload: {\n\t\t\t\tconfirmActive: true,\n\t\t\t},\n\t\t});\n\t\tconst responseData = await this.getDataWithValidation(true, { validateLoading: true });\n\t\tif (responseData.isValid) {\n\t\t\ttry {\n\t\t\t\tconst confirm = (_fn: Confirm) => {\n\t\t\t\t\tthis.confirm = (succeed, payload) => {\n\t\t\t\t\t\tif (succeed) {\n\t\t\t\t\t\t\tconst result = _fn(payload);\n\t\t\t\t\t\t\tthis.onSubmitResult(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\t\t\ttype: ActionType.SUBMIT_ERROR,\n\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\t\terror: payload,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tconst result =\n\t\t\t\t\tformSubmitFunction &&\n\t\t\t\t\tformSubmitFunction(responseData, {\n\t\t\t\t\t\tconfirm,\n\t\t\t\t\t});\n\t\t\t\tif (formState.confirmActive) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.onSubmitResult(result);\n\t\t\t} catch (error: any) {\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.SUBMIT_ERROR,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst errors = [];\n\t\t\tif (responseData.validateErrors) {\n\t\t\t\tfor (let i = 0; i < responseData.validateErrors.length; i++) {\n\t\t\t\t\tconst e = responseData.validateErrors[i];\n\t\t\t\t\terrors.push({ value: e.value, name: e.name, payload: e.payload, type: e.type });\n\t\t\t\t}\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.SUBMIT_ERROR,\n\t\t\t\t\tpayload: { error: errors },\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic shouldValidate(formState: FormState) {\n\t\tconst shouldValidateObj = this.store.state.formState.shouldValidate;\n\t\tlet shouldValidate = false;\n\t\tif (typeof shouldValidateObj === \"function\") {\n\t\t\tshouldValidate = shouldValidateObj(this);\n\t\t} else {\n\t\t\tconst shouldValidateType: FormShouldValidateType = shouldValidateObj;\n\t\t\tif (shouldValidateType === FormShouldValidateType.YES) {\n\t\t\t\tshouldValidate = true;\n\t\t\t} else if (shouldValidateType === FormShouldValidateType.AFTER_FIRST_SUBMIT_ATTEMPT) {\n\t\t\t\tif (formState.submitAttemptNumber > 0) {\n\t\t\t\t\tshouldValidate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn shouldValidate;\n\t}\n\n\tpublic createInput(name: string, options: CreateInputOptions) {\n\t\tthis.store.createInput(name, options);\n\t\tif (options.validation) {\n\t\t\tthis.store.__inputValidationFunctions__[name] = options.validation;\n\t\t} else {\n\t\t\tthis.store.__inputValidationFunctions__[name] = undefined;\n\t\t}\n\t\treturn {\n\t\t\tonChange: (value: any) => {\n\t\t\t\tthis.setValue(name, value).then();\n\t\t\t},\n\t\t\tonBlur: async () => {\n\t\t\t\tconsole.log(\"this.store.state.formState.refreshType\", this.store.state.formState.refreshType);\n\t\t\t\tif (this.store.state.formState.refreshType !== FormRefreshType.blur) return;\n\t\t\t\t//https://stackoverflow.com/questions/44142273/react-ul-with-onblur-event-is-preventing-onclick-from-firing-on-li\n\t\t\t\t//I added to solve rerender problem. Do we need it??\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tlet error;\n\t\t\t\t\tconst inputState = this.store.state.inputStates[name];\n\t\t\t\t\tconst value = inputState?._refreshValue;\n\t\t\t\t\tif (inputState?.validateRequired) {\n\t\t\t\t\t\terror = await this.validateInput(name, value);\n\t\t\t\t\t}\n\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\ttype: ActionType.BLURRED,\n\t\t\t\t\t\tpayload: { name, error, validateRequired: error === undefined },\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t},\n\t\t\taddValidation: (validatorToValidatorFunc: ValidatorToValidatorFunc) => {\n\t\t\t\tthis.store.addValidation(name, validatorToValidatorFunc);\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic deleteInput(name: string) {\n\t\tthis.checkNameExist(name);\n\t\tdelete this.store.state.inputStates[name];\n\t}\n\n\tpublic async setValue(name: string, value: any) {\n\t\tthis.checkNameExist(name);\n\t\tconst formState = this.store.state.formState;\n\t\tlet error = null;\n\t\tlet validated = false;\n\t\tif (formState.refreshType === FormRefreshType.instant) {\n\t\t\terror = await this.validateInput(name, value);\n\t\t\tvalidated = true;\n\t\t}\n\t\tthis.store.dispatch({\n\t\t\ttype: ActionType.NEW_VALUE,\n\t\t\tpayload: {\n\t\t\t\tvalue,\n\t\t\t\tname,\n\t\t\t\terror,\n\t\t\t\tvalidateRequired: !validated,\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async validateInput(name: string, value: any) {\n\t\tthis.checkNameExist(name);\n\t\tconst formState = this.store.state.formState;\n\t\tconst validationFunction = this.store.__inputValidationFunctions__[name];\n\t\tif (!validationFunction) return null;\n\t\tconst shouldValidate = this.shouldValidate(formState);\n\t\tif (!shouldValidate) return undefined;\n\t\tconst validator = new Validator(this.store, \"validator_\" + name);\n\t\tconst validation = validationFunction(validator);\n\t\tif (!validation) return null;\n\t\tlet array = [];\n\t\tconst vKeys = Object.keys(validation.validations);\n\t\tfor (let j = 0; j < vKeys.length; j++) {\n\t\t\tif (array.length) {\n\t\t\t\tif (!validation.settings.validateAll) {\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst vKey = vKeys[j];\n\t\t\tconst vObj = validation.validations[vKey];\n\t\t\tconst obj = vObj.fn(value, vObj.payload);\n\t\t\tif (!obj) array.push([{ name: name, type: vKey, value, payload: vObj.payload }]);\n\t\t\t// @ts-ignore\n\t\t\tif (obj && obj.then) {\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.ASYNC_VALIDATION,\n\t\t\t\t\tpayload: { name, value: true, forSubmit: false },\n\t\t\t\t});\n\t\t\t\tconst result = await obj;\n\t\t\t\tthis.store.dispatch({\n\t\t\t\t\ttype: ActionType.ASYNC_VALIDATION,\n\t\t\t\t\tpayload: { name, value: false, forSubmit: false },\n\t\t\t\t});\n\t\t\t\tif (!result) {\n\t\t\t\t\tarray.push({ name: name, type: vKey, value, payload: vObj.payload });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn array;\n\t}\n\n\tprivate async validate(data: any, { validateLoading }: { validateLoading: boolean }): Promise<ValidateError[]> {\n\t\tconst errors = [];\n\t\tconst keys = Object.keys(data);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst name = keys[i];\n\t\t\tconst validationFunction = this.store.__inputValidationFunctions__[name];\n\t\t\tif (!validationFunction) continue;\n\t\t\tconst validation = validationFunction(new Validator(this.store, \"validator_\" + name));\n\t\t\tif (!validation) continue;\n\t\t\tconst vKeys = Object.keys(validation.validations);\n\t\t\tfor (let j = 0; j < vKeys.length; j++) {\n\t\t\t\tconst vKey = vKeys[j];\n\t\t\t\tconst vObj = validation.validations[vKey];\n\t\t\t\tconst value = data[name];\n\t\t\t\tconst obj = vObj.fn(value, vObj.payload);\n\t\t\t\tif (!obj) errors.push({ name: name, type: vKey, value, payload: vObj.payload });\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (obj && obj.then) {\n\t\t\t\t\tvalidateLoading &&\n\t\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\t\ttype: ActionType.ASYNC_VALIDATION,\n\t\t\t\t\t\t\tpayload: { name, value: true, forSubmit: true },\n\t\t\t\t\t\t});\n\t\t\t\t\tconst result = await obj;\n\t\t\t\t\tvalidateLoading &&\n\t\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\t\ttype: ActionType.ASYNC_VALIDATION,\n\t\t\t\t\t\t\tpayload: { name, value: false, forSubmit: true },\n\t\t\t\t\t\t});\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\terrors.push({ name: name, type: vKey, value, payload: vObj.payload });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\tprivate checkNameExist(name: string) {\n\t\tif (!this.store.state.inputStates[name]) {\n\t\t\tthrow throwNotRegistered(name);\n\t\t}\n\t}\n\n\tprivate onSubmitResult(result: undefined | Promise<void> | void) {\n\t\tif (result && result.then !== undefined) {\n\t\t\tconst promise: Promise<any> = result as Promise<any>;\n\t\t\tpromise\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\ttype: ActionType.SUBMIT_SUCCEED,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((e: any) => {\n\t\t\t\t\tthis.store.dispatch({\n\t\t\t\t\t\ttype: ActionType.SUBMIT_ERROR,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\terror: e,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.store.dispatch({\n\t\t\t\ttype: ActionType.SUBMIT_SUCCEED,\n\t\t\t});\n\t\t}\n\t}\n}\n","import { ValidatorType } from \"./validator\";\nimport { ValidateError } from \"../models\";\n\nexport function getErrorDefaultText(error: ValidateError) {\n\tconsole.log(\"error\", error);\n\tswitch (error.type as ValidatorType) {\n\t\tcase ValidatorType.required:\n\t\t\treturn \"This Field is required.\";\n\t\tcase ValidatorType.min:\n\t\t\treturn \"Minimum required number is \" + error.payload;\n\t\tcase ValidatorType.minLength:\n\t\t\treturn (\n\t\t\t\t\"Minimum \" + error.payload + \" \" + (error.payload === 1 ? \"character\" : \"characters\") + \" are allowed\"\n\t\t\t);\n\t\tcase ValidatorType.max:\n\t\t\treturn \"Maximum required number is \" + error.payload;\n\t\tcase ValidatorType.maxLength:\n\t\t\treturn (\n\t\t\t\t\"Maximum \" + error.payload + \" \" + (error.payload === 1 ? \"character\" : \"characters\") + \" are allowed\"\n\t\t\t);\n\t\tcase ValidatorType.email:\n\t\t\treturn \"Please enter a valid email address.\";\n\t\tcase ValidatorType.phone:\n\t\t\treturn \"Please enter a valid phone number.\";\n\t\tcase ValidatorType.repeatPassword:\n\t\t\treturn (error && error.name ? error.name : \"Password \") + \" is not matched.\";\n\t\tcase ValidatorType.url:\n\t\t\treturn \"Please enter a valid url.\";\n\t}\n\treturn error.payload?.message || \"Invalid field\";\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { StoreState } from \"../../models\";\n\nexport function useConfirm(formBase: FormBase) {\n\tconst [active, setActive] = useState<any>(() => formBase.store.state.formState.confirmActive);\n\tconst resolve = useCallback(\n\t\t(payload?: any) => {\n\t\t\tif (formBase.confirm) {\n\t\t\t\tformBase.confirm(true, payload);\n\t\t\t}\n\t\t},\n\t\t[formBase]\n\t);\n\tconst reject = useCallback(() => {\n\t\tif (formBase.confirm) {\n\t\t\tformBase.confirm(false);\n\t\t}\n\t}, [formBase]);\n\tuseEffect(() => {\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetActive(formBase.store.state.formState.confirmActive);\n\t\t};\n\t\treturn formBase.store.subscribe(callback);\n\t}, [formBase]);\n\treturn {\n\t\tactive,\n\t\tresolve,\n\t\treject,\n\t};\n}\n","import { useContext } from \"react\";\nimport { FormContext } from \"./form-context\";\nimport { FormBase } from \"../form-base\";\nimport { throwContextError } from \"../utils\";\n\nexport function useContextFormBase(): FormBase {\n\tconst context = useContext(FormContext);\n\tif (!context) {\n\t\tthrow throwContextError(\"useContextFormBase\");\n\t}\n\treturn context.formBase;\n}\n","export function throwContextError(name: string) {\n\treturn new Error(`You cannot use ${name} outside of Form Component`);\n}\n","import { useInsertionEffect, useMemo } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { ValidatorToValidatorFunc } from \"../../validator\";\n\nexport function useCreateInput(\n\tformBase: FormBase,\n\tname: string,\n\tdefaultParams: { defaultValue?: any; validation?: ValidatorToValidatorFunc } = {}\n): { onChange: any; onBlur: any } {\n\tconst result = formBase.createInput(name, {\n\t\tdefaultValue: defaultParams.defaultValue,\n\t\tvalidation: defaultParams.validation,\n\t});\n\n\tuseInsertionEffect(() => {\n\t\treturn () => formBase.deleteInput(name);\n\t}, [formBase, name]);\n\treturn result;\n}\n","import { FormBase } from \"../form-base\";\nimport { useEffect, useState } from \"react\";\n\nexport function useErrorForGlobal(formBase: FormBase) {\n\tconst [state, setState] = useState<any>(() => formBase.store.state.formState?.error);\n\tuseEffect(() => {\n\t\tsetState(formBase.store.state.formState?.error);\n\t}, [formBase]);\n\tuseEffect(() => {\n\t\tconst callback = () => {\n\t\t\tconst formState = formBase.store.state.formState;\n\t\t\tsetState(formState?.error);\n\t\t};\n\t\treturn formBase.store.subscribe(callback);\n\t}, [formBase]);\n\treturn state;\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { InputState, ValidateError } from \"../../models\";\n\nexport function useErrorForInput(formBase: FormBase, name: string) {\n\tconst [state, setState] = useState<ValidateError[] | undefined>(\n\t\t() => formBase.store.state.inputStates[name]?.error\n\t);\n\tconst [loading, setLoading] = useState<any>(() => formBase.store.state.inputStates[name]?.validateLoading);\n\tuseEffect(() => {\n\t\tconst inputState: InputState | undefined = formBase.store.state.inputStates[name];\n\t\tsetState(inputState?.error);\n\t\tsetLoading(inputState?.validateLoading);\n\t}, [formBase, name]);\n\tuseEffect(() => {\n\t\tconst callback = () => {\n\t\t\tconst inputState: InputState | undefined = formBase.store.state.inputStates[name];\n\t\t\tsetState(inputState?.error);\n\t\t\tsetLoading(inputState?.validateLoading);\n\t\t};\n\t\treturn formBase.store.subscribe(callback);\n\t}, [formBase, name]);\n\treturn { error: state && state[0], loading };\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { FormBase } from \"../\";\nimport { StoreState } from \"../../models\";\nimport { EventType } from \"../../models/action-type\";\n\nexport function useEventChange(formBase: FormBase): [EventType[], Dispatch<SetStateAction<EventType[]>>] {\n\tconst [state, setState] = useState<EventType[]>(() => [{ ...formBase.store.__lastEvent__ }]);\n\tuseEffect(() => {\n\t\tconst callback = () => {\n\t\t\tconst event = formBase.store.__lastEvent__;\n\t\t\tsetState((s) => [...s, { ...event }]);\n\t\t};\n\t\treturn formBase.store.subscribe(callback);\n\t}, [formBase]);\n\treturn [state, setState];\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../\";\nimport { StoreState } from \"../../models\";\n\nexport function useWatch(formBase: FormBase, name: string | undefined) {\n\tconst [state, setState] = useState<any>(() => (name ? formBase.store.state.inputStates[name]?.value : undefined));\n\tuseEffect(() => {\n\t\tname && setState(formBase.store.state.inputStates[name]?.value);\n\t}, [formBase, name]);\n\tuseEffect(() => {\n\t\tif (!name) return;\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState(state.inputStates[name]?.value);\n\t\t};\n\t\treturn formBase.store.subscribe(callback);\n\t}, [formBase, name]);\n\treturn state;\n}\nexport function useInstantWatch(formBase: FormBase, name: string | undefined) {\n\tconst [state, setState] = useState<any>(() =>\n\t\tname ? formBase.store.state.inputStates[name]?._refreshValue : undefined\n\t);\n\tuseEffect(() => {\n\t\tname && setState(formBase.store.state.inputStates[name]?._refreshValue);\n\t}, [formBase, name]);\n\n\tuseEffect(() => {\n\t\tif (!name) return;\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState(state.inputStates[name]?._refreshValue);\n\t\t};\n\t\treturn formBase.store.subscribeInstant(callback);\n\t}, [formBase, name]);\n\treturn state;\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { StoreState } from \"../../models\";\n\nexport function useLoading(formBase: FormBase) {\n\tconst [state, setState] = useState<any>(() => formBase.store.state.formState?.loading);\n\tuseEffect(() => {\n\t\tsetState(formBase.store.state.formState?.loading);\n\t}, [formBase]);\n\tuseEffect(() => {\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState(state.formState.loading);\n\t\t};\n\t\treturn formBase.store.subscribe(callback);\n\t}, [formBase]);\n\treturn state;\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { ResponseData } from \"../../models\";\n\nexport function useResponseDataWatch(formBase: FormBase) {\n\tconst [state, setState] = useState<ResponseData>(() => formBase.getDataWithoutValidation());\n\tconst submitAttemptNumber = useRef(0);\n\tuseEffect(() => {\n\t\tconst store = formBase.store;\n\t\tconst callback = async () => {\n\t\t\tconst formState = store.state.formState;\n\t\t\tconst formStatus = formState.formStatus;\n\t\t\tif (formStatus !== \"NOT-CLEAN\") return;\n\t\t\tconst formStateSubmitAttemptNumber = formState.submitAttemptNumber;\n\t\t\tconst responseData = await formBase.getDataWithValidation(\n\t\t\t\tsubmitAttemptNumber.current !== formStateSubmitAttemptNumber,\n\t\t\t\t{\n\t\t\t\t\tvalidateLoading: false,\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (submitAttemptNumber.current !== formStateSubmitAttemptNumber) {\n\t\t\t\tsubmitAttemptNumber.current = formStateSubmitAttemptNumber;\n\t\t\t}\n\t\t\tsetState(responseData);\n\t\t};\n\t\treturn store.subscribe(callback);\n\t}, [formBase]);\n\treturn state;\n}\n","import { useEffect, useState } from \"react\";\nimport { FormBase } from \"../form-base\";\nimport { StoreState } from \"../../models\";\n\nexport function useStoreStateWatch(formBase: FormBase, instantType: \"instant\" | \"normal\") {\n\tconst [state, setState] = useState<StoreState>(() => formBase.store.state);\n\tuseEffect(() => {\n\t\tconst callback = (state: StoreState) => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t});\n\t\t};\n\t\tif (instantType === \"instant\") {\n\t\t\treturn formBase.store.subscribeInstant(callback);\n\t\t} else {\n\t\t\treturn formBase.store.subscribe(callback);\n\t\t}\n\t}, [instantType, formBase]);\n\treturn state;\n}\n"],"names":["FormRefreshType","FormShouldValidateType","ActionType","throwNotRegistered","name","Error","instant","Debounce","time","__select_time","constructor","this","cb","reset","setTimeout","clearTimeout","reducer","state","action","setError","currentInputState","error","formState","formStatus","Object","values","inputStates","reduce","p","c","type","INIT","BLURRED_DEBOUNCED","NEW_VALUE_DEBOUNCED","payload","validateRequired","value","_refreshValue","Array","isArray","NEW_VALUE","refreshType","debounceNumber","BLURRED","blur","SUBMIT_STARTED","loading","confirmActive","submitAttemptNumber","SUBMIT_SUCCEED","forEach","s","SUBMIT_ERROR","e","console","warn","ASYNC_VALIDATION","forSubmit","validateLoading","Store","listeners","instantListeners","debounce","__inputValidationFunctions__","__lastEvent__","actionProps","undefined","index","subscribe","fn","push","splice","indexOf","subscribeInstant","dispatch","log","instantBroadcast","broadcast","getValidationData","entries","filter","inputState","data","key","createInput","options","defaultValue","l","getRawData","getShouldValidateAgain","sum","r","addValidation","validation","phoneRegex","emailRegex","urlHttpRegex","required","min","_value","Number","isNaN","minLength","length","max","maxLength","email","toLowerCase","match","phone","repeatPassword","url","customRegex","regex","test","ValidatorType","Validator","store","validateName","validations","settings","validateAll","register","v","storeData","validate","async","registerAsync","set","param","FormContext","createContext","confirm","shouldValidate","AFTER_FIRST_SUBMIT_ATTEMPT","onSubmit","bind","getDataWithoutValidation","isValid","validateErrors","shouldValidateAgain","responseData","formSubmitFunction","is","getDataWithValidation","_fn","succeed","result","onSubmitResult","errors","i","shouldValidateObj","shouldValidateType","YES","onChange","setValue","then","onBlur","validateInput","validatorToValidatorFunc","deleteInput","checkNameExist","validated","validationFunction","array","vKeys","keys","j","vKey","vObj","obj","catch","message","formBase","active","setActive","useState","resolve","useCallback","reject","useEffect","context","useContext","defaultParams","useInsertionEffect","setState","setLoading","event","useRef","formStateSubmitAttemptNumber","current","instantType","callback"],"mappings":"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"}